{"pageProps":{"meta":{"title":"Elements \\ Getting started","description":""},"menu":[{"title":"Getting started","slug":"/docs/ui-system/elements/getting-started","submenu":[{"title":"Motivation","anchor":"/docs/ui-system/elements/getting-started#motivation"},{"title":"Installation","anchor":"/docs/ui-system/elements/getting-started#installation"},{"title":"Dependencies","anchor":"/docs/ui-system/elements/getting-started#dependencies"},{"title":"Available components","anchor":"/docs/ui-system/elements/getting-started#available-components"}]},{"title":"Element","slug":"/docs/ui-system/elements/element","submenu":[{"title":"Examples","anchor":"/docs/ui-system/elements/element#examples"},{"title":"Render children","anchor":"/docs/ui-system/elements/element#render-children"},{"title":"Before & After content","anchor":"/docs/ui-system/elements/element#before-&-after-content"},{"title":"Vertical & Horizontal alignment","anchor":"/docs/ui-system/elements/element#vertical-&-horizontal-alignment"},{"title":"Horizontal element","anchor":"/docs/ui-system/elements/element#horizontal-element"},{"title":"Vertical element","anchor":"/docs/ui-system/elements/element#vertical-element"},{"title":"Props","anchor":"/docs/ui-system/elements/element#props"}]},{"title":"List","slug":"/docs/ui-system/elements/list","submenu":[{"title":"Example","anchor":"/docs/ui-system/elements/list#example"},{"title":"Render Items","anchor":"/docs/ui-system/elements/list#render-items"},{"title":"Data properties","anchor":"/docs/ui-system/elements/list#data-properties"},{"title":"Item key value","anchor":"/docs/ui-system/elements/list#item-key-value"},{"title":"Custom item component","anchor":"/docs/ui-system/elements/list#custom-item-component"},{"title":"Custom item props","anchor":"/docs/ui-system/elements/list#custom-item-props"},{"title":"Extend props","anchor":"/docs/ui-system/elements/list#extend-props"},{"title":"Wrapping items","anchor":"/docs/ui-system/elements/list#wrapping-items"},{"title":"Extend Wrapper props","anchor":"/docs/ui-system/elements/list#extend-wrapper-props"},{"title":"List properties","anchor":"/docs/ui-system/elements/list#list-properties"}]},{"title":"Text","slug":"/docs/ui-system/elements/text","submenu":[{"title":"Examples","anchor":"/docs/ui-system/elements/text#examples"},{"title":"Using Text component","anchor":"/docs/ui-system/elements/text#using-text-component"},{"title":"Text types","anchor":"/docs/ui-system/elements/text#text-types"},{"title":"Paragraph","anchor":"/docs/ui-system/elements/text#paragraph"},{"title":"Props","anchor":"/docs/ui-system/elements/text#props"}]},{"title":"Overlay","slug":"/docs/ui-system/elements/overlay","submenu":[{"title":"Using Overlay","anchor":"/docs/ui-system/elements/overlay#using-overlay"},{"title":"Overlay Properties","anchor":"/docs/ui-system/elements/overlay#overlay-properties"}]},{"title":"Portal","slug":"/docs/ui-system/elements/portal","submenu":[{"title":"Examples","anchor":"/docs/ui-system/elements/portal#examples"},{"title":"Properties","anchor":"/docs/ui-system/elements/portal#properties"}]}],"content":{"compiledSource":"var c=Object.defineProperty,d=Object.defineProperties;var h=Object.getOwnPropertyDescriptors;var s=Object.getOwnPropertySymbols;var r=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable;var i=(e,t,o)=>t in e?c(e,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[t]=o,n=(e,t)=>{for(var o in t||(t={}))r.call(t,o)&&i(e,o,t[o]);if(s)for(var o of s(t))l.call(t,o)&&i(e,o,t[o]);return e},p=(e,t)=>d(e,h(t));var m=(e,t)=>{var o={};for(var a in e)r.call(e,a)&&t.indexOf(a)<0&&(o[a]=e[a]);if(e!=null&&s)for(var a of s(e))t.indexOf(a)<0&&l.call(e,a)&&(o[a]=e[a]);return o};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(o){var a=o,{components:e}=a,t=m(a,[\"components\"]);return mdx(MDXLayout,p(n(n({},layoutProps),t),{components:e,mdxType:\"MDXLayout\"}),mdx(\"h1\",null,\"Getting started\"),mdx(\"p\",null,`Elements are a package of patterns which should cover very common and\nfrequent use-cases, so you don't have to repeat yourself again and again.\nElements are a package of patterns which should cover very common and\nfrequent use-cases, so you don't have to repeat yourself again and again.`),mdx(\"h2\",null,\"Motivation\"),mdx(\"p\",null,`The goal is to cover many repeatable use-cases of writing code and make\nbanch of components which would solve this. You shouldn't focus on some\nspecifics of CSS or thinking about HTML validation or so. The goal is to\nmake configurable components so you can focus on your goals and business\nvalue.`),mdx(\"h2\",null,\"Installation\"),mdx(\"p\",null,\"You can install it with your preferred tool (\",mdx(\"strong\",{parentName:\"p\"},\"yarn\"),\" or \",mdx(\"strong\",{parentName:\"p\"},\"npm\"),\").\"),mdx(\"pre\",null,mdx(\"code\",n({parentName:\"pre\"},{className:\"language-bash\",metastring:\"live=false\",live:\"false\"}),`yarn add @vitus-labs/elements @vitus-labs/core\n`)),mdx(\"h2\",null,\"Dependencies\"),mdx(\"p\",null,`Elements depends on the following packages which need to be installed as\nwell.`),mdx(\"h2\",null,\"Available components\"),mdx(\"h3\",null,\"Element\"),mdx(\"p\",null,`Element is a simple component for aligning simple elements\nvertically/horizontally. This might be helpful for adding some\nadditional elements like loading icon to button, input element symbol\nor validation element. Which leads to repeatable patterns. All these\nthings and much more can be covered by this component. `,mdx(\"a\",n({parentName:\"p\"},{href:\"/docs/ui-system/elements/element\"}),`See the\ndocs`)),mdx(\"pre\",null,mdx(\"code\",n({parentName:\"pre\"},{className:\"language-tsx\"}),`// import { Element } from '@vitus-labs/elements'\n\nconst BeforeAfter = () => <Element css={beforeAfterStyles} />\n\nconst Content = () => <Element css={contentStyles} />\n\nconst beforeAfterStyles = \\`\n  \\${defaultCss};\n  width: 40px;\n  height: 100%;\n\\`\n\nconst contentStyles = \\`\n  \\${defaultCss};\n  width: 100%;\n  height: 100%;\n\\`\n\nconst styles = \\`\n  \\${defaultCss};\n  width: 100%;\n  min-width: 320px;\n  height: 240px;\n  padding: 16px;\n\\`\n\n// \\u2193\\u2193\\u2193 Element \\u2193\\u2193\\u2193\nrender(\n  <Element\n    gap={16}\n    content={Content}\n    css={styles}\n    beforeContent={BeforeAfter}\n    afterContent={BeforeAfter}\n  />\n)\n`)),mdx(\"h3\",null,\"List\"),mdx(\"p\",null,`Another usecase is rendering simple lists of data. If you are tired of\nusing map function again and again this component is here to cover it\nfor you. `,mdx(\"a\",n({parentName:\"p\"},{href:\"/docs/ui-system/elements/list\"}),\"See the docs\")),mdx(\"pre\",null,mdx(\"code\",n({parentName:\"pre\"},{className:\"language-tsx\"}),`// import { Element, List } from '@vitus-labs/elements'\n\nconst data = [\n  { name: 'John', surname: 'Doe' },\n  { name: 'Sam', surname: 'Johnson' },\n]\n\nconst styles = \\`\n  \\${defaultCss};\n  width: 100%;\n  min-width: 320px;\n  height: 40px;\n  padding: 16px;\n\\`\n\nconst component = ({ name, surname }) => (\n  <Element label={name + ' ' + surname} gap={16} css={styles} />\n)\n\nconst Users = () => (\n  <List\n    rootElement\n    vertical\n    data={data}\n    component={component}\n    contentDirection=\"rows\"\n  />\n)\n\nrender(<Users />)\n`)),mdx(\"h3\",null,\"Text\"),mdx(\"p\",null,`Simple component for s or any inline text element like strong, small\netc. `,mdx(\"a\",n({parentName:\"p\"},{href:\"/docs/ui-system/elements/text\"}),\"See the docs\")),mdx(\"pre\",null,mdx(\"code\",n({parentName:\"pre\"},{className:\"language-tsx\"}),`// import { Text } from '@vitus-labs/elements'\n\nconst Paragraph = () => (\n  <Text paragraph style={{ lineHeight: 1.5, color: '#fff' }}>\n    Hello, I'm a paragraph block element. You can use me for long texts.\n  </Text>\n)\n\nconst Strong = () => (\n  <Text tag=\"strong\" style={{ fontWeight: 600, color: '#fff' }}>\n    Strong text\n  </Text>\n)\n\nrender(\n  <>\n    <Paragraph />\n    <Strong />\n  </>\n)\n`)),mdx(\"h3\",null,\"Overlay\"),mdx(\"p\",null,`Overlay is a component which might help you building modal windows,\ndropdowns, tooltips, popovers etc. It's quite configurable so you can\nalign elements the way you like without any extra effort. `,mdx(\"a\",n({parentName:\"p\"},{href:\"/docs/ui-system/elements/overlay\"}),`See the\ndocs`)),mdx(\"pre\",null,mdx(\"code\",n({parentName:\"pre\"},{className:\"language-tsx\"}),`// import { Overlay, Element } from '@vitus-labs/elements'\n\nconst Button = (props) => {\n  const { active } = props\n\n  return (\n    <Element\n      {...props}\n      label=\"Click on me\"\n      tag=\"button\"\n      style={{\n        background: active ? '#86C232' : 'rgba(134, 194, 50, 0.4)',\n        border: '1px solid #86C232',\n        padding: '8px 16px',\n        color: '#fff',\n        borderRadius: 4,\n        outline: 'none',\n      }}\n    />\n  )\n}\n\nconst Content = (props) => (\n  <Element\n    style={{\n      backgroundColor: '#fff',\n      color: '#000',\n      padding: 8,\n      borderRadius: 8,\n      zIndex: 2,\n    }}\n    {...props}\n  >\n    Some content here\n  </Element>\n)\n\nrender(\n  <Overlay refName=\"innerRef\" trigger={Button}>\n    <Content />\n  </Overlay>\n)\n`)),mdx(\"h3\",null,\"Portal\"),mdx(\"p\",null,`Portal is just a common Reat Portal component to be used to append any\nelements to DOM. `,mdx(\"a\",n({parentName:\"p\"},{href:\"/docs/ui-system/elements/portal\"}),\"See the docs\")),mdx(\"pre\",null,mdx(\"code\",n({parentName:\"pre\"},{className:\"language-tsx\",metastring:\"live=false\",live:\"false\"}),`// import { Text, Portal } from '@vitus-labs/elements'\n\n// \\u2193\\u2193\\u2193 Portal \\u2193\\u2193\\u2193\n// render(\n//   <Portal>\n//     <Text label=\"This is a content appended at the end of the DOM.\" />\n//   </Portal>\n// )\n`)))}MDXContent.isMDXComponent=!0;\n","scope":{}}},"__N_SSG":true}