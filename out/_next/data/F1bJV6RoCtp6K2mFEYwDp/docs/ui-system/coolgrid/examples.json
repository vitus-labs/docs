{"pageProps":{"meta":{"name":"Coolgrid / Examples","title":"","description":""},"menu":[{"title":"Getting Started","slug":"/docs/ui-system/coolgrid/getting-started","submenu":[{"title":"Motivation","anchor":"/docs/ui-system/coolgrid/getting-started#motivation"},{"title":"Installation","anchor":"/docs/ui-system/coolgrid/getting-started#installation"},{"title":"Dependencies","anchor":"/docs/ui-system/coolgrid/getting-started#dependencies"},{"title":"Responsivity","anchor":"/docs/ui-system/coolgrid/getting-started#responsivity"},{"title":"Code examples","anchor":"/docs/ui-system/coolgrid/getting-started#code-examples"}]},{"title":"Container","slug":"/docs/ui-system/coolgrid/container","submenu":[{"title":"Usage example","anchor":"/docs/ui-system/coolgrid/container#usage-example"},{"title":"Overriding defaults","anchor":"/docs/ui-system/coolgrid/container#overriding-defaults"},{"title":"Properties","anchor":"/docs/ui-system/coolgrid/container#properties"},{"title":"Using props example","anchor":"/docs/ui-system/coolgrid/container#using-props-example"},{"title":"Responsive object type props","anchor":"/docs/ui-system/coolgrid/container#responsive-object-type-props"},{"title":"Responsive array type props","anchor":"/docs/ui-system/coolgrid/container#responsive-array-type-props"},{"title":"Props passed via Context","anchor":"/docs/ui-system/coolgrid/container#props-passed-via-context"}]},{"title":"Row","slug":"/docs/ui-system/coolgrid/row","submenu":[{"title":"Usage example","anchor":"/docs/ui-system/coolgrid/row#usage-example"},{"title":"Overriding defaults","anchor":"/docs/ui-system/coolgrid/row#overriding-defaults"},{"title":"Properties","anchor":"/docs/ui-system/coolgrid/row#properties"},{"title":"Using props example","anchor":"/docs/ui-system/coolgrid/row#using-props-example"},{"title":"Responsive object type props","anchor":"/docs/ui-system/coolgrid/row#responsive-object-type-props"},{"title":"Responsive array type props","anchor":"/docs/ui-system/coolgrid/row#responsive-array-type-props"},{"title":"Props passed via Context","anchor":"/docs/ui-system/coolgrid/row#props-passed-via-context"}]},{"title":"Col","slug":"/docs/ui-system/coolgrid/col","submenu":[{"title":"Usage example","anchor":"/docs/ui-system/coolgrid/col#usage-example"},{"title":"Properties","anchor":"/docs/ui-system/coolgrid/col#properties"},{"title":"Using props example","anchor":"/docs/ui-system/coolgrid/col#using-props-example"},{"title":"Responsive object type props","anchor":"/docs/ui-system/coolgrid/col#responsive-object-type-props"},{"title":"Responsive array type props","anchor":"/docs/ui-system/coolgrid/col#responsive-array-type-props"}]},{"title":"Theme","slug":"/docs/ui-system/coolgrid/theme","submenu":[{"title":"Provider","anchor":"/docs/ui-system/coolgrid/theme#provider"},{"title":"Default theme","anchor":"/docs/ui-system/coolgrid/theme#default-theme"},{"title":"Create own theme","anchor":"/docs/ui-system/coolgrid/theme#create-own-theme"}]},{"title":"Examples","slug":"/docs/ui-system/coolgrid/examples","submenu":[{"title":"Custom columns grid","anchor":"/docs/ui-system/coolgrid/examples#custom-columns-grid"},{"title":"Equal columns","anchor":"/docs/ui-system/coolgrid/examples#equal-columns"},{"title":"Equal column height","anchor":"/docs/ui-system/coolgrid/examples#equal-column-height"},{"title":"Nested columns","anchor":"/docs/ui-system/coolgrid/examples#nested-columns"},{"title":"One column with set size","anchor":"/docs/ui-system/coolgrid/examples#one-column-with-set-size"},{"title":"Spacing example","anchor":"/docs/ui-system/coolgrid/examples#spacing-example"},{"title":"Unequal columns","anchor":"/docs/ui-system/coolgrid/examples#unequal-columns"}]}],"content":{"compiledSource":"var m=Object.defineProperty,d=Object.defineProperties;var c=Object.getOwnPropertyDescriptors;var r=Object.getOwnPropertySymbols;var s=Object.prototype.hasOwnProperty,t=Object.prototype.propertyIsEnumerable;var n=(e,o,i)=>o in e?m(e,o,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[o]=i,a=(e,o)=>{for(var i in o||(o={}))s.call(o,i)&&n(e,i,o[i]);if(r)for(var i of r(o))t.call(o,i)&&n(e,i,o[i]);return e},C=(e,o)=>d(e,c(o));var p=(e,o)=>{var i={};for(var l in e)s.call(e,l)&&o.indexOf(l)<0&&(i[l]=e[l]);if(e!=null&&r)for(var l of r(e))o.indexOf(l)<0&&t.call(e,l)&&(i[l]=e[l]);return i};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(i){var l=i,{components:e}=l,o=p(l,[\"components\"]);return mdx(MDXLayout,C(a(a({},layoutProps),o),{components:e,mdxType:\"MDXLayout\"}),mdx(\"h1\",null,\"Examples\"),mdx(\"h2\",null,\"Custom columns grid\"),mdx(\"p\",null,\"Property \",mdx(\"strong\",{parentName:\"p\"},\"columns\"),\" can be set either on \",mdx(\"strong\",{parentName:\"p\"},\"Container\"),\" or \",mdx(\"strong\",{parentName:\"p\"},\"Row\"),\" component.\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-tsx\",metastring:\"view=vertical\",view:\"vertical\"}),`// import { Container, Row, Col, Provider, theme } from '@vitus-labs/coolgrid'\n\nrender(\n  <Provider theme={theme}>\n    <Container padding={40} gap={2} colCss={defaultCss}>\n      <Row>\n        <Col size={1} />\n        <Col size={1} />\n        <Col size={1} />\n        <Col size={1} />\n        <Col size={1} />\n        <Col size={1} />\n        <Col size={1} />\n        <Col size={1} />\n        <Col size={1} />\n        <Col size={1} />\n        <Col size={1} />\n        <Col size={1} />\n      </Row>\n      {/* changes total count of columnson row */}\n      <Row columns={7}>\n        <Col size={1} />\n        <Col size={1} />\n        <Col size={1} />\n        <Col size={1} />\n        <Col size={1} />\n        <Col size={1} />\n        <Col size={1} />\n      </Row>\n      {/* changes total count of columnson row */}\n      <Row columns={5}>\n        <Col size={1} />\n        <Col size={1} />\n        <Col size={1} />\n        <Col size={1} />\n        <Col size={1} />\n      </Row>\n    </Container>\n  </Provider>\n)\n`)),mdx(\"h2\",null,\"Equal columns\"),mdx(\"p\",null,\"The default behavior is that all \",mdx(\"inlineCode\",{parentName:\"p\"},\"Col\"),\"s in \",mdx(\"inlineCode\",{parentName:\"p\"},\"Row\"),\" have the same width.\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-tsx\",metastring:\"view=vertical\",view:\"vertical\"}),`// import { Container, Row, Col, Provider, theme } from '@vitus-labs/coolgrid'\n\nrender(\n  <Provider theme={theme}>\n    <Container padding={40} gap={2} colCss={defaultCss}>\n      <Row>\n        <Col />\n        <Col />\n      </Row>\n      <Row>\n        <Col />\n        <Col />\n        <Col />\n        <Col />\n      </Row>\n      <Row>\n        <Col />\n        <Col />\n        <Col />\n        <Col />\n        <Col />\n        <Col />\n        <Col />\n        <Col />\n      </Row>\n    </Container>\n  </Provider>\n)\n`)),mdx(\"h2\",null,\"Equal column height\"),mdx(\"p\",null,\"By default, all columns in a Row has equal height.\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-tsx\",metastring:\"view=vertical\",view:\"vertical\"}),`// import { Container, Row, Col, Provider, theme } from '@vitus-labs/coolgrid'\n\nrender(\n  <Provider theme={theme}>\n    <Container\n      size={4}\n      gap={2}\n      padding={20}\n      colCss={\\`\n       \\${defaultCss};\n       white-space: pre-wrap;\n       \\`}\n    >\n      <Row>\n        <Col>\n          <p>\n            Lorem ipsum dolor sit amet, cibo sensibus interesset no sit. Et\n            dolor possim volutpat qui. No malis tollit iriure eam, et vel tale\n            zril blandit, rebum vidisse nostrum qui eu. No nostrud dolorem\n            legendos mea, ea eum mucius oporteat platonem.Eam an case\n            scribentur, ei clita causae cum, alia debet eu vel.\n          </p>\n        </Col>\n        <Col />\n        <Col />\n      </Row>\n    </Container>\n  </Provider>\n)\n`)),mdx(\"h2\",null,\"Nested columns\"),mdx(\"p\",null,\"Columns and Rows can be also nested.\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-tsx\",metastring:\"view=vertical\",view:\"vertical\"}),`// import { Container, Row, Col, Provider, theme } from '@vitus-labs/coolgrid'\n\n// components also reuse padding defined in Container\nrender(\n  <Provider theme={theme}>\n    <Container padding={20} gap={2} colCss={defaultCss}>\n      <Row>\n        <Col size={8}>\n          <Row>\n            <Col size={6}>col-6</Col>\n            <Col size={6}>col-6</Col>\n          </Row>\n        </Col>\n        <Col size={4} />\n      </Row>\n    </Container>\n  </Provider>\n)\n`)),mdx(\"h2\",null,\"One column with set size\"),mdx(\"p\",null,\"We can define \",mdx(\"inlineCode\",{parentName:\"p\"},\"size\"),` only on some columns.\nThe other columns will fit into the rest width.`),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-tsx\",metastring:\"view=vertical\",view:\"vertical\"}),`// import { Container, Row, Col, Provider, theme } from '@vitus-labs/coolgrid'\n\nrender(\n  <Provider theme={theme}>\n    <Container padding={40} gap={2} colCss={defaultCss}>\n      <Row>\n        <Col />\n        <Col size={5}>size 5</Col>\n        <Col />\n      </Row>\n    </Container>\n  </Provider>\n)\n`)),mdx(\"h2\",null,\"Spacing example\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-tsx\",metastring:\"view=vertical\",view:\"vertical\"}),`// import { Container, Row, Col, Provider, theme } from '@vitus-labs/coolgrid'\n\nrender(\n  <Provider theme={theme}>\n    <Container padding={20} gap={2} colCss={defaultCss}>\n      <Row gap={10}>\n        <Col size={6}>gap-10</Col>\n        <Col size={6}>gap-10</Col>\n        <Col size={6}>gap-10</Col>\n        <Col size={6}>gap-10</Col>\n      </Row>\n      <Row gap={20}>\n        <Col size={6}>gap-20</Col>\n        <Col size={6}>gap-20</Col>\n        <Col size={6}>gap-20</Col>\n        <Col size={6}>gap-20</Col>\n      </Row>\n      <Row gap={30}>\n        <Col size={6}>gap-30</Col>\n        <Col size={6}>gap-30</Col>\n        <Col size={6}>gap-30</Col>\n        <Col size={6}>gap-30</Col>\n      </Row>\n      <Row gap={40}>\n        <Col size={6}>gap-40</Col>\n        <Col size={6}>gap-40</Col>\n        <Col size={6}>gap-40</Col>\n        <Col size={6}>gap-40</Col>\n      </Row>\n    </Container>\n  </Provider>\n)\n`)),mdx(\"h2\",null,\"Unequal columns\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-tsx\",metastring:\"view=vertical\",view:\"vertical\"}),`// import { Container, Row, Col, Provider, theme } from '@vitus-labs/coolgrid'\n\nrender(\n  <Provider theme={theme}>\n    <Container padding={40} gap={2} colCss={defaultCss}>\n      <Row>\n        <Col size={8} />\n        <Col size={4} />\n      </Row>\n      <Row>\n        <Col size={2} />\n        <Col size={2} />\n        <Col size={2} />\n        <Col size={6} />\n      </Row>\n      <Row>\n        <Col size={4} />\n        <Col size={6} />\n        <Col />\n        <Col />\n      </Row>\n    </Container>\n  </Provider>\n)\n`)))}MDXContent.isMDXComponent=!0;\n","scope":{}}},"__N_SSG":true}