{"pageProps":{"meta":{"title":"Elements / Element","description":""},"menu":[{"title":"Getting started","slug":"/docs/ui-system/elements/getting-started","submenu":[{"title":"Motivation","anchor":"/docs/ui-system/elements/getting-started#motivation"},{"title":"Installation","anchor":"/docs/ui-system/elements/getting-started#installation"},{"title":"Dependencies","anchor":"/docs/ui-system/elements/getting-started#dependencies"},{"title":"Available components","anchor":"/docs/ui-system/elements/getting-started#available-components"}]},{"title":"Element","slug":"/docs/ui-system/elements/element","submenu":[{"title":"Examples","anchor":"/docs/ui-system/elements/element#examples"},{"title":"Render children","anchor":"/docs/ui-system/elements/element#render-children"},{"title":"Before & After content","anchor":"/docs/ui-system/elements/element#before-&-after-content"},{"title":"Vertical & Horizontal alignment","anchor":"/docs/ui-system/elements/element#vertical-&-horizontal-alignment"},{"title":"Horizontal element","anchor":"/docs/ui-system/elements/element#horizontal-element"},{"title":"Vertical element","anchor":"/docs/ui-system/elements/element#vertical-element"},{"title":"Props","anchor":"/docs/ui-system/elements/element#props"}]},{"title":"List","slug":"/docs/ui-system/elements/list","submenu":[{"title":"Example","anchor":"/docs/ui-system/elements/list#example"},{"title":"Render Items","anchor":"/docs/ui-system/elements/list#render-items"},{"title":"Data properties","anchor":"/docs/ui-system/elements/list#data-properties"},{"title":"Item key value","anchor":"/docs/ui-system/elements/list#item-key-value"},{"title":"Custom item component","anchor":"/docs/ui-system/elements/list#custom-item-component"},{"title":"Custom item props","anchor":"/docs/ui-system/elements/list#custom-item-props"},{"title":"Extend props","anchor":"/docs/ui-system/elements/list#extend-props"},{"title":"Wrapping items","anchor":"/docs/ui-system/elements/list#wrapping-items"},{"title":"Extend Wrapper props","anchor":"/docs/ui-system/elements/list#extend-wrapper-props"},{"title":"List properties","anchor":"/docs/ui-system/elements/list#list-properties"}]},{"title":"Text","slug":"/docs/ui-system/elements/text","submenu":[{"title":"Examples","anchor":"/docs/ui-system/elements/text#examples"},{"title":"Using Text component","anchor":"/docs/ui-system/elements/text#using-text-component"},{"title":"Text types","anchor":"/docs/ui-system/elements/text#text-types"},{"title":"Paragraph","anchor":"/docs/ui-system/elements/text#paragraph"},{"title":"Props","anchor":"/docs/ui-system/elements/text#props"}]},{"title":"Overlay","slug":"/docs/ui-system/elements/overlay","submenu":[{"title":"Using Overlay","anchor":"/docs/ui-system/elements/overlay#using-overlay"},{"title":"Overlay Properties","anchor":"/docs/ui-system/elements/overlay#overlay-properties"}]},{"title":"Portal","slug":"/docs/ui-system/elements/portal","submenu":[{"title":"Examples","anchor":"/docs/ui-system/elements/portal#examples"},{"title":"Properties","anchor":"/docs/ui-system/elements/portal#properties"}]}],"content":{"compiledSource":"var d=Object.defineProperty,f=Object.defineProperties;var c=Object.getOwnPropertyDescriptors;var a=Object.getOwnPropertySymbols;var s=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable;var i=(t,n,r)=>n in t?d(t,n,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[n]=r,e=(t,n)=>{for(var r in n||(n={}))s.call(n,r)&&i(t,r,n[r]);if(a)for(var r of a(n))l.call(n,r)&&i(t,r,n[r]);return t},p=(t,n)=>f(t,c(n));var g=(t,n)=>{var r={};for(var o in t)s.call(t,o)&&n.indexOf(o)<0&&(r[o]=t[o]);if(t!=null&&a)for(var o of a(t))n.indexOf(o)<0&&l.call(t,o)&&(r[o]=t[o]);return r};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(r){var o=r,{components:t}=o,n=g(o,[\"components\"]);return mdx(MDXLayout,p(e(e({},layoutProps),n),{components:t,mdxType:\"MDXLayout\"}),mdx(\"h1\",null,\"Element\"),mdx(\"p\",null,`Element is the smallest possible unit to be used for creating components.\nBy default it renders `,mdx(\"strong\",{parentName:\"p\"},\"div\"),\". You can render any valid HTML \",mdx(\"strong\",{parentName:\"p\"},\"tag\"),` by\npasssing it as a prop.`),mdx(\"p\",null,\"Element is by default \",mdx(\"strong\",{parentName:\"p\"},\"inline-flex\"),\". You can set \",mdx(\"strong\",{parentName:\"p\"},\"flex\"),` by using\nboolean `,mdx(\"strong\",{parentName:\"p\"},\"block\"),` value which will also stretch the element to width of\n`,mdx(\"strong\",{parentName:\"p\"},\"100%\"),\".\"),mdx(\"p\",null,\"Element also checks by default if \",mdx(\"strong\",{parentName:\"p\"},\"tag\"),\" passed in is type of \",mdx(\"strong\",{parentName:\"p\"},\"inline\"),`\nHTML tag like `,mdx(\"strong\",{parentName:\"p\"},\"button\"),\" or \",mdx(\"strong\",{parentName:\"p\"},\"span\"),`. If so, other helper sub-elements\nrendered inside (`,mdx(\"strong\",{parentName:\"p\"},\"beforeContent\"),\" and \",mdx(\"strong\",{parentName:\"p\"},\"afterContent\"),` wrappers) are by\ndefault converted to `,mdx(\"strong\",{parentName:\"p\"},\"span\"),\" element so it is HTML valid.\"),mdx(\"h2\",null,\"Examples\"),mdx(\"h3\",null,\"Horizontal Element example\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\"}),`// import { Element } from '@vitus-labs/elements'\n\nconst BeforeAfter = () => <Element css={beforeAfterStyles} />\n\nconst Content = () => <Element css={contentStyles} />\n\nconst beforeAfterStyles = \\`\n  \\${defaultCss};\n  width: 40px;\n  height: 100%;\n\\`\n\nconst contentStyles = \\`\n  \\${defaultCss};\n  width: 100%;\n  height: 100%;\n\\`\n\nconst styles = \\`\n  \\${defaultCss};\n  width: 100%;\n  min-width: 320px;\n  height: 240px;\n  padding: 16px;\n\\`\n\n// \\u2193\\u2193\\u2193 Element \\u2193\\u2193\\u2193\nrender(\n  <Element\n    gap={16}\n    content={Content}\n    css={styles}\n    beforeContent={BeforeAfter}\n    afterContent={BeforeAfter}\n  />\n)\n`)),mdx(\"h3\",null,\"Vertical Element example\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\"}),`// import { Element } from '@vitus-labs/elements'\n\nconst BeforeAfter = () => <Element css={beforeAfterStyles} />\n\nconst Content = () => <Element css={contentStyles} />\n\nconst beforeAfterStyles = \\`\n  \\${defaultCss};\n  height: 40px;\n  width: 100%;\n\\`\n\nconst contentStyles = \\`\n  \\${defaultCss};\n  width: 100%;\n  height: 100%;\n\\`\n\nconst styles = \\`\n  \\${defaultCss};\n  width: 100%;\n  min-width: 240px;\n  height: 320px;\n  padding: 16px;\n\\`\n\n// \\u2193\\u2193\\u2193 Element \\u2193\\u2193\\u2193\nrender(\n  <Element\n    vertical\n    gap={16}\n    content={Content}\n    css={styles}\n    beforeContent={BeforeAfter}\n    afterContent={BeforeAfter}\n  />\n)\n`)),mdx(\"h2\",null,\"Render children\"),mdx(\"p\",null,`To render children inside component you can pass content as\n`,mdx(\"strong\",{parentName:\"p\"},\"children\"),\", \",mdx(\"strong\",{parentName:\"p\"},\"label\"),\", or \",mdx(\"strong\",{parentName:\"p\"},\"content\"),` prop. Label or content might be\nnicer or more comfortable for inline elements. If you pass more of them\n`,mdx(\"strong\",{parentName:\"p\"},\"children\"),\" will \",mdx(\"strong\",{parentName:\"p\"},\"have\"),` the highest priority to be rendered and\n`,mdx(\"strong\",{parentName:\"p\"},\"label\"),\" or \",mdx(\"strong\",{parentName:\"p\"},\"content\"),\" will be ignored. Priorities are \",mdx(\"strong\",{parentName:\"p\"},`children \\u2192\ncontent \\u2192 label`),`. You can pick any of those prop names based on your\nprefeference.`),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\"}),`// import { Element } from '@vitus-labs/elements'\n\nconst beforeAfterStyles = \\`\n  \\${defaultCss};\n  width: 40px;\n  height: 100%;\n\\`\n\nconst contentStyles = \\`\n  \\${defaultCss};\n  width: 100%;\n  height: 100%;\n\\`\n\nconst styles = \\`\n  \\${defaultCss};\n  width: 100%;\n  min-width: 240px;\n  height: 48px;\n  padding: 16px;\n  margin-bottom: 12px;\n\\`\n\nconst BeforeAfter = () => <Element css={beforeAfterStyles} />\n\nconst Content = () => <Element css={contentStyles} />\n\n// \\u2193\\u2193\\u2193 Element \\u2193\\u2193\\u2193\nrender(\n  <>\n    {/* used content here */}\n    <Element\n      gap={16}\n      content={Content}\n      css={styles}\n      beforeContent={BeforeAfter}\n      afterContent={BeforeAfter}\n    />\n\n    {/* used label here */}\n    <Element\n      gap={16}\n      label={Content}\n      css={styles}\n      beforeContent={BeforeAfter}\n      afterContent={BeforeAfter}\n    />\n\n    {/* used children here */}\n    <Element\n      gap={16}\n      content={Content}\n      css={styles}\n      beforeContent={BeforeAfter}\n      afterContent={BeforeAfter}\n    >\n      <Content />\n    </Element>\n  </>\n)\n`)),mdx(\"h2\",null,\"Before & After content\"),mdx(\"p\",null,\"You can pass \",mdx(\"strong\",{parentName:\"p\"},\"beforeContent\"),\" or \",mdx(\"strong\",{parentName:\"p\"},\"afterContent\"),`. This may be also\nkind of alternative to using `,mdx(\"strong\",{parentName:\"p\"},\":before\"),\" or \",mdx(\"strong\",{parentName:\"p\"},\":after\"),` pseudo elements.\nThis is useful especially in cases like buttons with loading icon or\ninput wrappers with icons or anything similar. It supports more types to\nrender before/after content, check out examples.`),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\"}),`// import { Element } from '@vitus-labs/elements'\n\nconst beforeAfterStyles = \\`\n  \\${defaultCss};\n  width: 40px;\n  height: 100%;\n\\`\n\nconst contentStyles = \\`\n  \\${defaultCss};\n  width: 100%;\n  height: 100%;\n\\`\n\nconst styles = \\`\n  \\${defaultCss};\n  width: 100%;\n  min-width: 240px;\n  height: 48px;\n  padding: 16px;\n  margin-bottom: 12px;\n\\`\n\nconst BeforeAfter = () => <Element css={beforeAfterStyles} />\n\nconst Content = () => <Element css={contentStyles} />\n\n{\n  /*\n  beforeContent - renders box on the leftt side\n  afterContent - renders box on the right side\n*/\n}\n\n// \\u2193\\u2193\\u2193 Element \\u2193\\u2193\\u2193\nrender(\n  <>\n    {/* [1] Function as prop */}\n    <Element\n      gap={16}\n      content={Content}\n      css={styles}\n      beforeContent={BeforeAfter}\n      afterContent={BeforeAfter}\n    />\n\n    {/* [2] Rendered component as prop */}\n    <Element\n      gap={16}\n      content={Content}\n      css={styles}\n      beforeContent={<BeforeAfter />}\n      afterContent={<BeforeAfter />}\n    />\n\n    {/* [3] Function as prop */}\n    <Element\n      gap={16}\n      content={Content}\n      css={styles}\n      beforeContent={() => <BeforeAfter />}\n      afterContent={() => <BeforeAfter />}\n    />\n  </>\n)\n`)),mdx(\"h2\",null,\"Vertical & Horizontal alignment\"),mdx(\"p\",null,`Element can be aligned horizontally or vertically. So you can have\n`,mdx(\"strong\",{parentName:\"p\"},\"beforeContent\"),\" on the left side of \",mdx(\"strong\",{parentName:\"p\"},\"children\"),` or above. The same\napplies for `,mdx(\"strong\",{parentName:\"p\"},\"afterContent\"),` (below children or on the right side).\nCheck out the examples below to see more.`),mdx(\"h3\",null,\"Horizontal variant\"),mdx(\"p\",null,\"Element aligns inner elements horizontally by default.\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\"}),`// import { Element } from '@vitus-labs/elements'\n\nconst beforeAfterStyles = \\`\n  \\${defaultCss};\n  width: 40px;\n  height: 100%;\n\\`\n\nconst contentStyles = \\`\n  \\${defaultCss};\n  width: 100%;\n  height: 100%;\n\\`\n\nconst styles = \\`\n  \\${defaultCss};\n  width: 100%;\n  min-width: 240px;\n  height: 48px;\n  padding: 16px;\n  margin-bottom: 12px;\n\\`\n\nconst BeforeAfter = () => <Element css={beforeAfterStyles} />\n\nconst Content = () => <Element css={contentStyles} />\n\n{\n  /* Element is horizontal by default */\n}\n\n// \\u2193\\u2193\\u2193 Element \\u2193\\u2193\\u2193\nrender(\n  <Element\n    gap={16}\n    content={Content}\n    css={styles}\n    beforeContent={BeforeAfter}\n    afterContent={BeforeAfter}\n  />\n)\n`)),mdx(\"h3\",null,\"Vertical variant\"),mdx(\"p\",null,\"For vertical aligning you can use prop \",mdx(\"strong\",{parentName:\"p\"},\"vertical\"),\" set to \",mdx(\"strong\",{parentName:\"p\"},\"true\"),` or\nuse `,mdx(\"strong\",{parentName:\"p\"},\"direction\"),\" prop which can be set to \",mdx(\"strong\",{parentName:\"p\"},\"rows\"),\" | \",mdx(\"strong\",{parentName:\"p\"},\"inline\"),` |\n`,mdx(\"strong\",{parentName:\"p\"},\"reverseRows\"),\" | \",mdx(\"strong\",{parentName:\"p\"},\"reverseInline\"),\".\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\",metastring:\"preview=inline\",preview:\"inline\"}),`// import { Element } from '@vitus-labs/elements'\n\nconst beforeAfterStyles = \\`\n  \\${defaultCss};\n  height: 40px;\n  width: 100%;\n\\`\n\nconst contentStyles = \\`\n  \\${defaultCss};\n  width: 100%;\n  height: 100%;\n\\`\n\nconst styles = \\`\n  \\${defaultCss};\n  width: 50%;\n  height: 320px;\n  padding: 16px;\n  margin-left: 16px;\n  margin-right: 16px;\n\\`\n\nconst BeforeAfter = () => <Element css={beforeAfterStyles} />\n\nconst Content = () => <Element css={contentStyles} />\n\n// \\u2193\\u2193\\u2193 Element \\u2193\\u2193\\u2193\nrender(\n  <>\n    {/* make it vertical by adding \\`vertical\\` prop */}\n    <Element\n      vertical\n      gap={16}\n      content={Content}\n      css={styles}\n      beforeContent={BeforeAfter}\n      afterContent={BeforeAfter}\n    />\n\n    {/* make it vertical by adding \\`direction\\` prop */}\n    <Element\n      direction=\"rows\"\n      gap={16}\n      content={Content}\n      css={styles}\n      beforeContent={BeforeAfter}\n      afterContent={BeforeAfter}\n    />\n  </>\n)\n`)),mdx(\"h2\",null,\"Horizontal element\"),mdx(\"p\",null,`Element can be aligned horizontally or vertically. So you can have\n`,mdx(\"strong\",{parentName:\"p\"},\"beforeContent\"),\" on the left side of \",mdx(\"strong\",{parentName:\"p\"},\"children\"),` or above. The same\napplies for `,mdx(\"strong\",{parentName:\"p\"},\"afterContent\"),` (below children or on the right side).\nCheck out the examples below to see more. For vertical aligning you can\nuse prop `,mdx(\"strong\",{parentName:\"p\"},\"vertical\"),\" set to \",mdx(\"strong\",{parentName:\"p\"},\"true\"),\".\"),mdx(\"h3\",null,\"Align content, beforeContent & afterContent horizontally\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\",metastring:\"editor=false\",editor:\"false\"}),`// import { Element } from '@vitus-labs/elements'\n\nconst Before = () => <Element css={beforeContentStyles} />\n\nconst After = () => <Element css={afterContentStyles} />\n\nconst Content = () => <Element css={contentStyles} />\n\nconst beforeAfterStyles = \\`\n  width: 40px;\n  height: 100%;\n\\`\n\nconst beforeContentStyles = \\`\n  \\${activeCss};\n  width: 20px;\n  height: 100%;\n\\`\n\nconst afterContentStyles = \\`\n  \\${defaultCss};\n  width: 20px;\n  height: 100%;\n\\`\n\nconst contentStyles = \\`\n  \\${defaultCss};\n  width: 100%;\n  height: 100%;\n\\`\n\nconst styles = \\`\n  \\${defaultCss};\n  width: 100%;\n  min-width: 240px;\n  height: 48px;\n  padding: 16px;\n  margin-bottom: 12px;\n\n  &:last-of-type {\n    margin: 0;\n  }\n\\`\n\n// \\u2193\\u2193\\u2193 Element \\u2193\\u2193\\u2193\nrender(\n  <>\n    <Element\n      gap={16}\n      content={Content} // used content here\n      css={styles}\n      beforeContentAlignX=\"left\"\n      beforeContent={Before}\n      afterContent={After}\n      beforeContentCss={beforeAfterStyles}\n    />\n\n    <Element\n      gap={16}\n      label={Content} // used label here\n      css={styles}\n      beforeContentAlignX=\"center\"\n      beforeContent={Before}\n      afterContent={After}\n      beforeContentCss={beforeAfterStyles}\n    />\n\n    <Element\n      gap={16}\n      content={Content}\n      css={styles}\n      beforeContentAlignX=\"right\"\n      beforeContent={Before}\n      afterContent={After}\n      beforeContentCss={beforeAfterStyles}\n    >\n      {/* used children */}\n      <Content />\n    </Element>\n  </>\n)\n`)),mdx(\"p\",null,mdx(\"em\",{parentName:\"p\"},mdx(\"strong\",{parentName:\"em\"},\"beforeContent\"),\" aligned (left, center, right)\")),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\",metastring:\"editor=false\",editor:\"false\"}),`// import { Element } from '@vitus-labs/elements'\n\nconst Before = () => <Element css={beforeAfterContentStyles} />\n\nconst After = () => <Element css={beforeAfterContentStyles} />\n\nconst Content = () => <Element css={contentStyles} />\n\nconst beforeAfterContentStyles = \\`\n  \\${defaultCss};\n  width: 40px;\n  height: 100%;\n\\`\n\nconst contentStyles = \\`\n  \\${activeCss};\n  width: 70%;\n  height: 100%;\n\\`\n\nconst styles = \\`\n  \\${defaultCss};\n  width: 100%;\n  min-width: 240px;\n  height: 48px;\n  padding: 16px;\n  margin-bottom: 12px;\n\n  &:last-of-type {\n    margin: 0;\n  }\n\\`\n\n// \\u2193\\u2193\\u2193 Element \\u2193\\u2193\\u2193\nrender(\n  <>\n    <Element\n      gap={16}\n      content={Content} // used content here\n      css={styles}\n      contentAlignX=\"left\"\n      beforeContent={Before}\n      afterContent={After}\n    />\n\n    <Element\n      gap={16}\n      label={Content} // used label here\n      css={styles}\n      contentAlignX=\"center\"\n      beforeContent={Before}\n      afterContent={After}\n    />\n\n    <Element\n      gap={16}\n      content={Content}\n      css={styles}\n      contentAlignX=\"right\"\n      beforeContent={Before}\n      afterContent={After}\n    >\n      {/* used children */}\n      <Content />\n    </Element>\n  </>\n)\n`)),mdx(\"p\",null,mdx(\"em\",{parentName:\"p\"},mdx(\"strong\",{parentName:\"em\"},\"children / content / label\"),\" aligned (left, center, right)\")),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\",metastring:\"editor=false\",editor:\"false\"}),`// import { Element } from '@vitus-labs/elements'\n\nconst Before = () => <Element css={beforeContentStyles} />\n\nconst After = () => <Element css={afterContentStyles} />\n\nconst Content = () => <Element css={contentStyles} />\n\nconst beforeAfterStyles = \\`\n  width: 40px;\n  height: 100%;\n\\`\n\nconst beforeContentStyles = \\`\n  \\${defaultCss};\n  width: 20px;\n  height: 100%;\n\\`\n\nconst afterContentStyles = \\`\n  \\${activeCss};\n  width: 20px;\n  height: 100%;\n\\`\n\nconst contentStyles = \\`\n  \\${defaultCss};\n  width: 100%;\n  height: 100%;\n\\`\n\nconst styles = \\`\n  \\${defaultCss};\n  width: 100%;\n  min-width: 240px;\n  height: 48px;\n  padding: 16px;\n  margin-bottom: 12px;\n\n  &:last-of-type {\n    margin: 0;\n  }\n\\`\n\n// \\u2193\\u2193\\u2193 Element \\u2193\\u2193\\u2193\nrender(\n  <>\n    <Element\n      gap={16}\n      content={Content} // used content here\n      css={styles}\n      afterContentAlignX=\"left\"\n      beforeContent={Before}\n      afterContent={After}\n      afterContentCss={beforeAfterStyles}\n    />\n\n    <Element\n      gap={16}\n      label={Content} // used label here\n      css={styles}\n      afterContentAlignX=\"center\"\n      beforeContent={Before}\n      afterContent={After}\n      afterContentCss={beforeAfterStyles}\n    />\n\n    <Element\n      gap={16}\n      content={Content}\n      css={styles}\n      afterContentAlignX=\"right\"\n      beforeContent={Before}\n      afterContent={After}\n      afterContentCss={beforeAfterStyles}\n    >\n      {/* used children */}\n      <Content />\n    </Element>\n  </>\n)\n`)),mdx(\"p\",null,mdx(\"em\",{parentName:\"p\"},mdx(\"strong\",{parentName:\"em\"},\"afterContent\"),\" aligned (left, center, right)\")),mdx(\"h3\",null,\"Align content, beforeContent & afterContent vertically\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\",metastring:\"editor=false\",editor:\"false\"}),`// import { Element } from '@vitus-labs/elements'\n\nconst Before = () => <Element css={beforeContentStyles} />\n\nconst After = () => <Element css={afterContentStyles} />\n\nconst Content = () => <Element css={contentStyles} />\n\nconst beforeAfterStyles = \\`\n  height: 100%;\n\\`\n\nconst beforeContentStyles = \\`\n  \\${activeCss};\n  width: 20px;\n  height: 20px;\n\\`\n\nconst afterContentStyles = \\`\n  \\${defaultCss};\n  width: 20px;\n  height: 20px;\n\\`\n\nconst contentStyles = \\`\n  \\${defaultCss};\n  width: 100%;\n  height: 20px;\n\\`\n\nconst styles = \\`\n  \\${defaultCss};\n  width: 100%;\n  min-width: 240px;\n  height: 80px;\n  padding: 16px;\n  margin-bottom: 12px;\n\n  &:last-of-type {\n    margin: 0;\n  }\n\\`\n\n// \\u2193\\u2193\\u2193 Element \\u2193\\u2193\\u2193\nrender(\n  <>\n    <Element\n      gap={16}\n      content={Content} // used content here\n      css={styles}\n      beforeContentAlignY=\"top\"\n      beforeContent={Before}\n      afterContent={After}\n      beforeContentCss={beforeAfterStyles}\n    />\n\n    <Element\n      gap={16}\n      label={Content} // used label here\n      css={styles}\n      beforeContentAlignY=\"center\"\n      beforeContent={Before}\n      afterContent={After}\n      beforeContentCss={beforeAfterStyles}\n    />\n\n    <Element\n      gap={16}\n      content={Content}\n      css={styles}\n      beforeContentAlignY=\"bottom\"\n      beforeContent={Before}\n      afterContent={After}\n      beforeContentCss={beforeAfterStyles}\n    >\n      {/* used children */}\n      <Content />\n    </Element>\n  </>\n)\n`)),mdx(\"p\",null,mdx(\"em\",{parentName:\"p\"},mdx(\"strong\",{parentName:\"em\"},\"beforeContent\"),\" aligned (top, center, bottom)\")),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\",metastring:\"editor=false\",editor:\"false\"}),`// import { Element } from '@vitus-labs/elements'\n\nconst Before = () => <Element css={beforeContentStyles} />\n\nconst After = () => <Element css={afterContentStyles} />\n\nconst Content = () => <Element css={contentStyles} />\n\nconst beforeAfterStyles = \\`\n  height: 100%;\n\\`\n\nconst beforeContentStyles = \\`\n  \\${defaultCss};\n  width: 20px;\n  height: 20px;\n\\`\n\nconst afterContentStyles = \\`\n  \\${defaultCss};\n  width: 20px;\n  height: 20px;\n\\`\n\nconst contentStyles = \\`\n  \\${activeCss};\n  width: 100%;\n  height: 20px;\n\\`\n\nconst styles = \\`\n  \\${defaultCss};\n  width: 100%;\n  min-width: 240px;\n  height: 80px;\n  padding: 16px;\n  margin-bottom: 12px;\n\n  &:last-of-type {\n    margin: 0;\n  }\n\\`\n\n// \\u2193\\u2193\\u2193 Element \\u2193\\u2193\\u2193\nrender(\n  <>\n    <Element\n      gap={16}\n      content={Content} // used content here\n      css={styles}\n      contentAlignY=\"top\"\n      beforeContent={Before}\n      afterContent={After}\n      beforeContentCss={beforeAfterStyles}\n    />\n\n    <Element\n      gap={16}\n      label={Content} // used label here\n      css={styles}\n      contentAlignY=\"center\"\n      beforeContent={Before}\n      afterContent={After}\n      beforeContentCss={beforeAfterStyles}\n    />\n\n    <Element\n      gap={16}\n      content={Content}\n      css={styles}\n      contentAlignY=\"bottom\"\n      beforeContent={Before}\n      afterContent={After}\n      beforeContentCss={beforeAfterStyles}\n    >\n      {/* used children */}\n      <Content />\n    </Element>\n  </>\n)\n`)),mdx(\"p\",null,mdx(\"em\",{parentName:\"p\"},mdx(\"strong\",{parentName:\"em\"},\"children / content / label\"),\" aligned (top, center, bottom)\")),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\",metastring:\"editor=false\",editor:\"false\"}),`// import { Element } from '@vitus-labs/elements'\n\nconst Before = () => <Element css={beforeContentStyles} />\n\nconst After = () => <Element css={afterContentStyles} />\n\nconst Content = () => <Element css={contentStyles} />\n\nconst beforeAfterStyles = \\`\n  height: 100%;\n\\`\n\nconst beforeContentStyles = \\`\n  \\${defaultCss};\n  width: 20px;\n  height: 20px;\n\\`\n\nconst afterContentStyles = \\`\n  \\${activeCss};\n  width: 20px;\n  height: 20px;\n\\`\n\nconst contentStyles = \\`\n  \\${defaultCss};\n  width: 100%;\n  height: 20px;\n\\`\n\nconst styles = \\`\n  \\${defaultCss};\n  width: 100%;\n  min-width: 240px;\n  height: 80px;\n  padding: 16px;\n  margin-bottom: 12px;\n\n  &:last-of-type {\n    margin: 0;\n  }\n\\`\n\n// \\u2193\\u2193\\u2193 Element \\u2193\\u2193\\u2193\nrender(\n  <>\n    <Element\n      gap={16}\n      content={Content}\n      css={styles}\n      afterContentAlignY=\"top\"\n      beforeContent={Before}\n      afterContent={After}\n      beforeContentCss={beforeAfterStyles}\n    />\n\n    <Element\n      gap={16}\n      content={Content}\n      css={styles}\n      afterContentAlignY=\"center\"\n      beforeContent={Before}\n      afterContent={After}\n      beforeContentCss={beforeAfterStyles}\n    />\n\n    <Element\n      gap={16}\n      content={Content}\n      css={styles}\n      afterContentAlignY=\"bottom\"\n      beforeContent={Before}\n      afterContent={After}\n      beforeContentCss={beforeAfterStyles}\n    />\n  </>\n)\n`)),mdx(\"p\",null,mdx(\"em\",{parentName:\"p\"},mdx(\"strong\",{parentName:\"em\"},\"afterContent\"),\" aligned (top, center, bottom)\")),mdx(\"h2\",null,\"Vertical element\"),mdx(\"p\",null,`Element can be aligned horizontally or vertically. So you can have\n`,mdx(\"strong\",{parentName:\"p\"},\"beforeContent\"),\" on the left side of \",mdx(\"strong\",{parentName:\"p\"},\"children\"),` or above. The same\napplies for `,mdx(\"strong\",{parentName:\"p\"},\"afterContent\"),` (below children or on the right side).\nCheck out the examples below to see more. For vertical aligning you can\nuse prop `,mdx(\"strong\",{parentName:\"p\"},\"vertical\"),\" set to \",mdx(\"strong\",{parentName:\"p\"},\"true\"),\" or use \",mdx(\"strong\",{parentName:\"p\"},\"direction\"),` prop which\ncan be set to `,mdx(\"strong\",{parentName:\"p\"},\"rows\"),\" or \",mdx(\"strong\",{parentName:\"p\"},\"inline\"),\".\"),mdx(\"h3\",null,\"Align content, beforeContent and afterContent horizontally\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\",metastring:\"editor=false preview=inline\",editor:\"false\",preview:\"inline\"}),`// import { Element } from '@vitus-labs/elements'\n\nconst Before = () => <Element css={beforeContentStyles} />\n\nconst After = () => <Element css={afterContentStyles} />\n\nconst Content = () => <Element css={contentStyles} />\n\nconst beforeAfterStyles = \\`\n  width: 100%;\n  height: 20px;\n\\`\n\nconst beforeContentStyles = \\`\n  \\${activeCss};\n  width: 50%;\n  height: 20px;\n\\`\n\nconst afterContentStyles = \\`\n  \\${defaultCss};\n  width: 50%;\n  height: 20px;\n\\`\n\nconst contentStyles = \\`\n  \\${defaultCss};\n  width: 50%;\n  height: 100%;\n\\`\n\nconst styles = \\`\n  \\${defaultCss};\n  width: 100%;\n  min-width: 60px;\n  height: 240px;\n  padding: 8px;\n  margin-left: 8px;\n  margin-right: 8px;\n\\`\n\n// \\u2193\\u2193\\u2193 Element \\u2193\\u2193\\u2193\nrender(\n  <>\n    <Element\n      vertical\n      gap={16}\n      content={Content} // used content here\n      css={styles}\n      beforeContentAlignX=\"left\"\n      afterContentAlignX=\"center\"\n      contentAlignX=\"center\"\n      beforeContent={Before}\n      afterContent={After}\n      afterContentCss={beforeAfterStyles}\n    />\n\n    <Element\n      vertical\n      gap={16}\n      content={Content}\n      css={styles}\n      beforeContentAlignX=\"center\"\n      afterContentAlignX=\"center\"\n      contentAlignX=\"center\"\n      beforeContent={Before}\n      afterContent={After}\n      afterContentCss={beforeAfterStyles}\n    />\n\n    <Element\n      vertical\n      gap={16}\n      content={Content}\n      css={styles}\n      beforeContentAlignX=\"right\"\n      afterContentAlignX=\"center\"\n      contentAlignX=\"center\"\n      beforeContent={Before}\n      afterContent={After}\n      afterContentCss={beforeAfterStyles}\n    />\n  </>\n)\n`)),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\",metastring:\"editor=false preview=inline\",editor:\"false\",preview:\"inline\"}),`// import { Element } from '@vitus-labs/elements'\n\nconst Before = () => <Element css={beforeContentStyles} />\n\nconst After = () => <Element css={afterContentStyles} />\n\nconst Content = () => <Element css={contentStyles} />\n\nconst beforeAfterStyles = \\`\n  width: 100%;\n  height: 20px;\n\\`\n\nconst beforeContentStyles = \\`\n  \\${defaultCss};\n  width: 50%;\n  height: 20px;\n\\`\n\nconst afterContentStyles = \\`\n  \\${defaultCss};\n  width: 50%;\n  height: 20px;\n\\`\n\nconst contentStyles = \\`\n  \\${activeCss};\n  width: 50%;\n  height: 100%;\n\\`\n\nconst styles = \\`\n  \\${defaultCss};\n  width: 100%;\n  min-width: 60px;\n  height: 240px;\n  padding: 8px;\n  margin-left: 8px;\n  margin-right: 8px;\n\\`\n\n// \\u2193\\u2193\\u2193 Element \\u2193\\u2193\\u2193\nrender(\n  <>\n    <Element\n      vertical\n      gap={16}\n      content={Content}\n      css={styles}\n      beforeContentAlignX=\"center\"\n      afterContentAlignX=\"center\"\n      contentAlignX=\"left\"\n      beforeContent={Before}\n      afterContent={After}\n      afterContentCss={beforeAfterStyles}\n    />\n\n    <Element\n      vertical\n      gap={16}\n      content={Content}\n      css={styles}\n      beforeContentAlignX=\"center\"\n      afterContentAlignX=\"center\"\n      contentAlignX=\"center\"\n      beforeContent={Before}\n      afterContent={After}\n      afterContentCss={beforeAfterStyles}\n    />\n\n    <Element\n      vertical\n      gap={16}\n      content={Content}\n      css={styles}\n      beforeContentAlignX=\"center\"\n      afterContentAlignX=\"center\"\n      contentAlignX=\"right\"\n      beforeContent={Before}\n      afterContent={After}\n      afterContentCss={beforeAfterStyles}\n    />\n  </>\n)\n`)),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\",metastring:\"editor=false preview=inline\",editor:\"false\",preview:\"inline\"}),`// import { Element } from '@vitus-labs/elements'\n\nconst Before = () => <Element css={beforeContentStyles} />\n\nconst After = () => <Element css={afterContentStyles} />\n\nconst Content = () => <Element css={contentStyles} />\n\nconst beforeAfterStyles = \\`\n  width: 100%;\n  height: 20px;\n\\`\n\nconst beforeContentStyles = \\`\n  \\${defaultCss};\n  width: 50%;\n  height: 20px;\n\\`\n\nconst afterContentStyles = \\`\n \\${activeCss};\n  width: 50%;\n  height: 20px;\n\\`\n\nconst contentStyles = \\`\n  \\${defaultCss};\n  width: 50%;\n  height: 100%;\n\\`\n\nconst styles = \\`\n  \\${defaultCss};\n  width: 100%;\n  min-width: 60px;\n  height: 240px;\n  padding: 8px;\n  margin-left: 8px;\n  margin-right: 8px;\n\\`\n\n// \\u2193\\u2193\\u2193 Element \\u2193\\u2193\\u2193\nrender(\n  <>\n    <Element\n      vertical\n      gap={16}\n      content={Content}\n      css={styles}\n      beforeContentAlignX=\"center\"\n      afterContentAlignX=\"left\"\n      contentAlignX=\"center\"\n      beforeContent={Before}\n      afterContent={After}\n      afterContentCss={beforeAfterStyles}\n    />\n\n    <Element\n      vertical\n      gap={16}\n      content={Content}\n      css={styles}\n      beforeContentAlignX=\"center\"\n      afterContentAlignX=\"center\"\n      contentAlignX=\"center\"\n      beforeContent={Before}\n      afterContent={After}\n      afterContentCss={beforeAfterStyles}\n    />\n\n    <Element\n      vertical\n      gap={16}\n      content={Content}\n      css={styles}\n      beforeContentAlignX=\"center\"\n      afterContentAlignX=\"right\"\n      contentAlignX=\"center\"\n      beforeContent={Before}\n      afterContent={After}\n      afterContentCss={beforeAfterStyles}\n    />\n  </>\n)\n`)),mdx(\"h3\",null,\"Align content, beforeContent and afterContent vertically\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\",metastring:\"editor=false preview=inline\",editor:\"false\",preview:\"inline\"}),`// import { Element } from '@vitus-labs/elements'\n\nconst Before = () => <Element css={beforeContentStyles} />\n\nconst After = () => <Element css={afterContentStyles} />\n\nconst Content = () => <Element css={contentStyles} />\n\nconst beforeAfterStyles = \\`\n  width: 100%;\n  height: 60px;\n\\`\n\nconst beforeContentStyles = \\`\n  \\${activeCss};\n  width: 100%;\n  height: 20px;\n\\`\n\nconst afterContentStyles = \\`\n  \\${defaultCss};\n  width: 100%;\n  height: 20px;\n\\`\n\nconst contentStyles = \\`\n  \\${defaultCss};\n  width: 100%;\n  height: 100%;\n\\`\n\nconst styles = \\`\n  \\${defaultCss};\n  width: 100%;\n  min-width: 60px;\n  height: 240px;\n  padding: 8px;\n  margin-left: 8px;\n  margin-right: 8px;\n\\`\n\n// \\u2193\\u2193\\u2193 Element \\u2193\\u2193\\u2193\nrender(\n  <>\n    <Element\n      vertical\n      gap={16}\n      content={Content}\n      css={styles}\n      beforeContentAlignY=\"top\"\n      afterContentAlignX=\"center\"\n      contentAlignX=\"center\"\n      beforeContent={Before}\n      afterContent={After}\n      beforeContentCss={beforeAfterStyles}\n    />\n\n    <Element\n      vertical\n      gap={16}\n      content={Content}\n      css={styles}\n      beforeContentAlignY=\"center\"\n      afterContentAlignX=\"center\"\n      contentAlignX=\"center\"\n      beforeContent={Before}\n      afterContent={After}\n      beforeContentCss={beforeAfterStyles}\n    />\n\n    <Element\n      vertical\n      gap={16}\n      content={Content}\n      css={styles}\n      beforeContentAlignY=\"bottom\"\n      afterContentAlignX=\"center\"\n      contentAlignX=\"center\"\n      beforeContent={Before}\n      afterContent={After}\n      beforeContentCss={beforeAfterStyles}\n    />\n  </>\n)\n`)),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\",metastring:\"editor=false preview=inline\",editor:\"false\",preview:\"inline\"}),`// import { Element } from '@vitus-labs/elements'\n\nconst Before = () => <Element css={beforeContentStyles} />\n\nconst After = () => <Element css={afterContentStyles} />\n\nconst Content = () => <Element css={contentStyles} />\n\nconst beforeAfterStyles = \\`\n  width: 100%;\n  height: 60px;\n\\`\n\nconst beforeContentStyles = \\`\n  \\${defaultCss};\n  width: 100%;\n  height: 20px;\n\\`\n\nconst afterContentStyles = \\`\n  \\${defaultCss};\n  width: 100%;\n  height: 20px;\n\\`\n\nconst contentStyles = \\`\n  \\${activeCss};\n  width: 100%;\n  height: 20px;\n\\`\n\nconst styles = \\`\n  \\${defaultCss};\n  width: 100%;\n  min-width: 60px;\n  height: 240px;\n  padding: 8px;\n  margin-left: 8px;\n  margin-right: 8px;\n\\`\n\n// \\u2193\\u2193\\u2193 Element \\u2193\\u2193\\u2193\nrender(\n  <>\n    <Element\n      vertical\n      gap={16}\n      content={Content}\n      css={styles}\n      contentAlignY=\"top\"\n      afterContentAlignX=\"center\"\n      contentAlignX=\"center\"\n      beforeContent={Before}\n      afterContent={After}\n      contentCss={beforeAfterStyles}\n    />\n\n    <Element\n      vertical\n      gap={16}\n      content={Content}\n      css={styles}\n      contentAlignY=\"center\"\n      afterContentAlignX=\"center\"\n      contentAlignX=\"center\"\n      beforeContent={Before}\n      afterContent={After}\n      contentCss={beforeAfterStyles}\n    />\n\n    <Element\n      vertical\n      gap={16}\n      content={Content}\n      css={styles}\n      contentAlignY=\"bottom\"\n      afterContentAlignX=\"center\"\n      contentAlignX=\"center\"\n      beforeContent={Before}\n      afterContent={After}\n      contentCss={beforeAfterStyles}\n    />\n  </>\n)\n`)),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\",metastring:\"editor=false preview=inline\",editor:\"false\",preview:\"inline\"}),`// import { Element } from '@vitus-labs/elements'\n\nconst Before = () => <Element css={beforeContentStyles} />\n\nconst After = () => <Element css={afterContentStyles} />\n\nconst Content = () => <Element css={contentStyles} />\n\nconst beforeAfterStyles = \\`\n  width: 100%;\n  height: 60px;\n\\`\n\nconst beforeContentStyles = \\`\n  \\${defaultCss};\n  width: 100%;\n  height: 20px;\n\\`\n\nconst afterContentStyles = \\`\n  \\${activeCss};\n  width: 100%;\n  height: 20px;\n\\`\n\nconst contentStyles = \\`\n  \\${defaultCss};\n  width: 100%;\n  height: 100%;\n\\`\n\nconst styles = \\`\n  \\${defaultCss};\n  width: 100%;\n  min-width: 60px;\n  height: 240px;\n  padding: 8px;\n  margin-left: 8px;\n  margin-right: 8px;\n\\`\n\n// \\u2193\\u2193\\u2193 Element \\u2193\\u2193\\u2193\nrender(\n  <>\n    <Element\n      vertical\n      gap={16}\n      content={Content}\n      css={styles}\n      afterContentAlignY=\"top\"\n      afterContentAlignX=\"center\"\n      contentAlignX=\"center\"\n      beforeContent={Before}\n      afterContent={After}\n      afterContentCss={beforeAfterStyles}\n    />\n\n    <Element\n      vertical\n      gap={16}\n      content={Content}\n      css={styles}\n      afterContentAlignY=\"center\"\n      afterContentAlignX=\"center\"\n      contentAlignX=\"center\"\n      beforeContent={Before}\n      afterContent={After}\n      afterContentCss={beforeAfterStyles}\n    />\n\n    <Element\n      vertical\n      gap={16}\n      content={Content}\n      css={styles}\n      afterContentAlignY=\"bottom\"\n      afterContentAlignX=\"center\"\n      contentAlignX=\"center\"\n      beforeContent={Before}\n      afterContent={After}\n      afterContentCss={beforeAfterStyles}\n    />\n  </>\n)\n`)),mdx(\"h2\",null,\"Props\"),mdx(\"p\",null,\"These are props to which can be passed to \",mdx(\"strong\",{parentName:\"p\"},\"Element\")),mdx(\"table\",null,mdx(\"thead\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"thead\"},mdx(\"th\",e({parentName:\"tr\"},{align:null}),\"Name\"),mdx(\"th\",e({parentName:\"tr\"},{align:null}),\"Type\"),mdx(\"th\",e({parentName:\"tr\"},{align:\"center\"}),\"Default value\"),mdx(\"th\",e({parentName:\"tr\"},{align:\"left\"}),\"Description\"))),mdx(\"tbody\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"tag\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"HTMLElement tag\")),mdx(\"td\",e({parentName:\"tr\"},{align:\"center\"}),\"div\"),mdx(\"td\",e({parentName:\"tr\"},{align:\"left\"}),\"A prop which will change HTML tag of the element\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"children\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"ReactNode\")),mdx(\"td\",e({parentName:\"tr\"},{align:\"center\"})),mdx(\"td\",e({parentName:\"tr\"},{align:\"left\"}),\"Simply children\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"content\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"ReactNode\")),mdx(\"td\",e({parentName:\"tr\"},{align:\"center\"})),mdx(\"td\",e({parentName:\"tr\"},{align:\"left\"}),\"A prop which can be used instead of \",mdx(\"strong\",{parentName:\"td\"},\"children\"))),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"label\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"ReactNode\")),mdx(\"td\",e({parentName:\"tr\"},{align:\"center\"})),mdx(\"td\",e({parentName:\"tr\"},{align:\"left\"}),\"A prop which can be used instead of \",mdx(\"strong\",{parentName:\"td\"},\"children\"))),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"beforeContent\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"ReactNode\")),mdx(\"td\",e({parentName:\"tr\"},{align:\"center\"})),mdx(\"td\",e({parentName:\"tr\"},{align:\"left\"}),\"A \",mdx(\"strong\",{parentName:\"td\"},\"children\"),\" to be rendered inside \",mdx(\"strong\",{parentName:\"td\"},\"beforeContent\"),\" wrapper.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"afterContent\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"ReactNode\")),mdx(\"td\",e({parentName:\"tr\"},{align:\"center\"})),mdx(\"td\",e({parentName:\"tr\"},{align:\"left\"}),\"A \",mdx(\"strong\",{parentName:\"td\"},\"children\"),\" to be rendered inside \",mdx(\"strong\",{parentName:\"td\"},\"afterContent\"),\" wrapper.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"block\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"boolean\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"object\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"array\")),mdx(\"td\",e({parentName:\"tr\"},{align:\"center\"}),\"false\"),mdx(\"td\",e({parentName:\"tr\"},{align:\"left\"}),\"Whether should behave as \",mdx(\"strong\",{parentName:\"td\"},\"inline\"),\" or \",mdx(\"strong\",{parentName:\"td\"},\"block\"),\" element\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"equalCols\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"boolean\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"object\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"array\")),mdx(\"td\",e({parentName:\"tr\"},{align:\"center\"}),\"false\"),mdx(\"td\",e({parentName:\"tr\"},{align:\"left\"}),\"Whether should all inner elements have the same width / height\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"gap\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"number\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"string\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"object\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"array\")),mdx(\"td\",e({parentName:\"tr\"},{align:\"center\"}),\"0\"),mdx(\"td\",e({parentName:\"tr\"},{align:\"left\"}),\"Defines space between beforeContent, content and afterContent\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"vertical\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"boolean\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"object\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"array\")),mdx(\"td\",e({parentName:\"tr\"},{align:\"center\"}),\"false\"),mdx(\"td\",e({parentName:\"tr\"},{align:\"left\"}),\"Defines if element should render vertically\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"direction\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"inline\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"rows\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"reverseInline\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"reverseRows\")),mdx(\"td\",e({parentName:\"tr\"},{align:\"center\"})),mdx(\"td\",e({parentName:\"tr\"},{align:\"left\"}),\"Define whether element should render horizontally or vertically. Does the same job as \",mdx(\"strong\",{parentName:\"td\"},\"vertical\"),\" prop and takes a precedenc over that prop\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"alignX\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"left\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"center\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"right\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"spaceBetween\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"spaceAround\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"block\")),mdx(\"td\",e({parentName:\"tr\"},{align:\"center\"}),\"left\"),mdx(\"td\",e({parentName:\"tr\"},{align:\"left\"}),\"Define alignment of \",mdx(\"strong\",{parentName:\"td\"},\"beforeContent\"),\", \",mdx(\"strong\",{parentName:\"td\"},\"content\"),\", and \",mdx(\"strong\",{parentName:\"td\"},\"afterContent\"),\" with respect to root element.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"alignY\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"top\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"center\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"bottom\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"spaceBetween\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"spaceAround\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"block\")),mdx(\"td\",e({parentName:\"tr\"},{align:\"center\"}),\"left\"),mdx(\"td\",e({parentName:\"tr\"},{align:\"left\"}),\"Define alignment of \",mdx(\"strong\",{parentName:\"td\"},\"beforeContent\"),\", \",mdx(\"strong\",{parentName:\"td\"},\"content\"),\", and \",mdx(\"strong\",{parentName:\"td\"},\"afterContent\"),\" with respect to root element.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"css\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"string\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"callback\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"css\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"object\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"array\")),mdx(\"td\",e({parentName:\"tr\"},{align:\"center\"})),mdx(\"td\",e({parentName:\"tr\"},{align:\"left\"}),\"If you need to add an additional styling to the root element, you can do so by injecting styles using this property.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"contentCss\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"string\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"callback\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"css\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"object\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"array\")),mdx(\"td\",e({parentName:\"tr\"},{align:\"center\"})),mdx(\"td\",e({parentName:\"tr\"},{align:\"left\"}),\"If you need to add an additional styling to the content element, you can do so by injecting styles using this property.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"beforeContentCss\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"string\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"callback\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"css\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"object\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"array\")),mdx(\"td\",e({parentName:\"tr\"},{align:\"center\"})),mdx(\"td\",e({parentName:\"tr\"},{align:\"left\"}),\"If you need to add an additional styling to the beforeContent element, you can do so by injecting styles using this property\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"afterContentCss\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"string\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"callback\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"css\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"object\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"array\")),mdx(\"td\",e({parentName:\"tr\"},{align:\"center\"})),mdx(\"td\",e({parentName:\"tr\"},{align:\"left\"}),\"If you need to add an additional styling to the afterContent element, you can do so by injecting styles using this property\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"contentDirection\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"inline\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"rows\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"reverseInline\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"reverseRows\")),mdx(\"td\",e({parentName:\"tr\"},{align:\"center\"}),\"inline\"),mdx(\"td\",e({parentName:\"tr\"},{align:\"left\"}),\"Define whether children in content wrapper should be rendered in line or in rows\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"contentAlignX\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"left\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"center\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"right\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"spaceBetween\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"spaceAround\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"block\")),mdx(\"td\",e({parentName:\"tr\"},{align:\"center\"}),\"left\"),mdx(\"td\",e({parentName:\"tr\"},{align:\"left\"}),\"Define how children in content wrapper should be aligned\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"contentAlignY\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"top\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"center\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"bottom\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"spaceBetween\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"spaceAround\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"block\")),mdx(\"td\",e({parentName:\"tr\"},{align:\"center\"}),\"center\"),mdx(\"td\",e({parentName:\"tr\"},{align:\"left\"}),\"Define how children in content wrapper should be aligned\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"beforeContentDirection\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"inline\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"rows\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"reverseInline\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"reverseRows\")),mdx(\"td\",e({parentName:\"tr\"},{align:\"center\"}),\"inline\"),mdx(\"td\",e({parentName:\"tr\"},{align:\"left\"}),\"Define whether children in beforeContent wrapper should be rendered in line or in rows\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"beforeContentAlignX\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"left\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"center\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"right\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"spaceBetween\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"spaceAround\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"block\")),mdx(\"td\",e({parentName:\"tr\"},{align:\"center\"}),\"left\"),mdx(\"td\",e({parentName:\"tr\"},{align:\"left\"}),\"Define how children in beforeContent wrapper should be aligned\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"beforeContentAlignY\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"top\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"center\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"bottom\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"spaceBetween\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"spaceAround\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"block\")),mdx(\"td\",e({parentName:\"tr\"},{align:\"center\"}),\"center\"),mdx(\"td\",e({parentName:\"tr\"},{align:\"left\"}),\"Define how children in beforeContent wrapper should be aligned\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"afterContentDirection\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"inline\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"rows\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"reverseInline\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"reverseRows\")),mdx(\"td\",e({parentName:\"tr\"},{align:\"center\"}),\"inline\"),mdx(\"td\",e({parentName:\"tr\"},{align:\"left\"}),\"Define whether children in afterContent wrapper should be rendered in line or in rows\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"afterContentAlignX\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"left\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"center\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"right\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"spaceBetween\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"spaceAround\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"block\")),mdx(\"td\",e({parentName:\"tr\"},{align:\"center\"}),\"left\"),mdx(\"td\",e({parentName:\"tr\"},{align:\"left\"}),\"Define how children in afterContent wrapper should be aligned\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"afterContentAlignY\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"top\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"center\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"bottom\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"spaceBetween\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"spaceAround\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"block\")),mdx(\"td\",e({parentName:\"tr\"},{align:\"center\"}),\"center\"),mdx(\"td\",e({parentName:\"tr\"},{align:\"left\"}),\"Define how children in afterContent wrapper should be aligned\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"ref\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"React ref\")),mdx(\"td\",e({parentName:\"tr\"},{align:\"center\"})),mdx(\"td\",e({parentName:\"tr\"},{align:\"left\"}),\"It uses \",mdx(\"strong\",{parentName:\"td\"},\"forwardRef\"),\" on background so you can use \",mdx(\"strong\",{parentName:\"td\"},\"ref\"),\" normally\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"innerRef\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"React ref\")),mdx(\"td\",e({parentName:\"tr\"},{align:\"center\"})),mdx(\"td\",e({parentName:\"tr\"},{align:\"left\"}),\"This is just a fallback for \",mdx(\"strong\",{parentName:\"td\"},\"ref\"),\" in case you cannot pass ref\")))))}MDXContent.isMDXComponent=!0;\n","scope":{}}},"__N_SSG":true}