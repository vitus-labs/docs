{"pageProps":{"meta":{"title":"Elements \\ Overlay","description":""},"menu":[{"title":"Getting started","slug":"/docs/ui-system/elements/getting-started","submenu":[{"title":"Motivation","anchor":"/docs/ui-system/elements/getting-started#motivation"},{"title":"Installation","anchor":"/docs/ui-system/elements/getting-started#installation"},{"title":"Dependencies","anchor":"/docs/ui-system/elements/getting-started#dependencies"},{"title":"Available components","anchor":"/docs/ui-system/elements/getting-started#available-components"}]},{"title":"Element","slug":"/docs/ui-system/elements/element","submenu":[{"title":"Examples","anchor":"/docs/ui-system/elements/element#examples"},{"title":"Render children","anchor":"/docs/ui-system/elements/element#render-children"},{"title":"Before & After content","anchor":"/docs/ui-system/elements/element#before-&-after-content"},{"title":"Vertical & Horizontal alignment","anchor":"/docs/ui-system/elements/element#vertical-&-horizontal-alignment"},{"title":"Horizontal element","anchor":"/docs/ui-system/elements/element#horizontal-element"},{"title":"Vertical element","anchor":"/docs/ui-system/elements/element#vertical-element"},{"title":"Props","anchor":"/docs/ui-system/elements/element#props"}]},{"title":"List","slug":"/docs/ui-system/elements/list","submenu":[{"title":"Example","anchor":"/docs/ui-system/elements/list#example"},{"title":"Render Items","anchor":"/docs/ui-system/elements/list#render-items"},{"title":"Data properties","anchor":"/docs/ui-system/elements/list#data-properties"},{"title":"Item key value","anchor":"/docs/ui-system/elements/list#item-key-value"},{"title":"Custom item component","anchor":"/docs/ui-system/elements/list#custom-item-component"},{"title":"Custom item props","anchor":"/docs/ui-system/elements/list#custom-item-props"},{"title":"Extend props","anchor":"/docs/ui-system/elements/list#extend-props"},{"title":"Wrapping items","anchor":"/docs/ui-system/elements/list#wrapping-items"},{"title":"Extend Wrapper props","anchor":"/docs/ui-system/elements/list#extend-wrapper-props"},{"title":"List properties","anchor":"/docs/ui-system/elements/list#list-properties"}]},{"title":"Text","slug":"/docs/ui-system/elements/text","submenu":[{"title":"Examples","anchor":"/docs/ui-system/elements/text#examples"},{"title":"Using Text component","anchor":"/docs/ui-system/elements/text#using-text-component"},{"title":"Text types","anchor":"/docs/ui-system/elements/text#text-types"},{"title":"Paragraph","anchor":"/docs/ui-system/elements/text#paragraph"},{"title":"Props","anchor":"/docs/ui-system/elements/text#props"}]},{"title":"Overlay","slug":"/docs/ui-system/elements/overlay","submenu":[{"title":"Using Overlay","anchor":"/docs/ui-system/elements/overlay#using-overlay"},{"title":"Overlay Properties","anchor":"/docs/ui-system/elements/overlay#overlay-properties"}]},{"title":"Portal","slug":"/docs/ui-system/elements/portal","submenu":[{"title":"Examples","anchor":"/docs/ui-system/elements/portal#examples"},{"title":"Properties","anchor":"/docs/ui-system/elements/portal#properties"}]}],"content":{"compiledSource":"var i=Object.defineProperty,m=Object.defineProperties;var N=Object.getOwnPropertyDescriptors;var o=Object.getOwnPropertySymbols;var l=Object.prototype.hasOwnProperty,d=Object.prototype.propertyIsEnumerable;var s=(e,n,r)=>n in e?i(e,n,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[n]=r,t=(e,n)=>{for(var r in n||(n={}))l.call(n,r)&&s(e,r,n[r]);if(o)for(var r of o(n))d.call(n,r)&&s(e,r,n[r]);return e},p=(e,n)=>m(e,N(n));var g=(e,n)=>{var r={};for(var a in e)l.call(e,a)&&n.indexOf(a)<0&&(r[a]=e[a]);if(e!=null&&o)for(var a of o(e))n.indexOf(a)<0&&d.call(e,a)&&(r[a]=e[a]);return r};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(r){var a=r,{components:e}=a,n=g(a,[\"components\"]);return mdx(MDXLayout,p(t(t({},layoutProps),n),{components:e,mdxType:\"MDXLayout\"}),mdx(\"h1\",null,\"Overlay\"),mdx(\"p\",null,\"Overlay is a component to be used for \",mdx(\"strong\",{parentName:\"p\"},\"dropdowns\"),`,\n`,mdx(\"strong\",{parentName:\"p\"},\"popovers\"),\", \",mdx(\"strong\",{parentName:\"p\"},\"tooltips\"),\", or even \",mdx(\"strong\",{parentName:\"p\"},\"modal windows\"),`\nwith triggers.`),mdx(\"pre\",null,mdx(\"code\",t({parentName:\"pre\"},{className:\"language-tsx\"}),`// import { Overlay, Element } from '@vitus-labs/elements'\n\nconst Button = (props) => {\n  const { active } = props\n\n  return (\n    <Element\n      {...props}\n      label=\"Click on me\"\n      tag=\"button\"\n      style={{\n        background: active ? '#54D6FF' : 'rgba(84, 214, 255, 0.4)',\n        border: '1px solid #54D6FF',\n        padding: '8px 16px',\n        color: '#fff',\n        borderRadius: 4,\n        outline: 'none',\n      }}\n    />\n  )\n}\n\nconst Content = (props) => (\n  <Element\n    style={{\n      backgroundColor: '#fff',\n      color: '#000',\n      padding: 8,\n      borderRadius: 8,\n    }}\n    {...props}\n  >\n    Some content here\n  </Element>\n)\n\n// \\u2193\\u2193\\u2193 Overlay \\u2193\\u2193\\u2193\nrender(\n  <Overlay trigger={Button} refName=\"innerRef\" offsetY={8}>\n    <Content />\n  </Overlay>\n)\n`)),mdx(\"h2\",null,\"Using Overlay\"),mdx(\"p\",null,\"There are several ways of rendering text within \",mdx(\"strong\",{parentName:\"p\"},\"Text\"),` component. So\nlet's take a look at them.`),mdx(\"h3\",null,\"Creating a dropdown\"),mdx(\"p\",null,\"First of all, you can use \",mdx(\"strong\",{parentName:\"p\"},\"Text\"),\" and pass children.\"),mdx(\"pre\",null,mdx(\"code\",t({parentName:\"pre\"},{className:\"language-tsx\"}),`// import { Overlay, Element } from '@vitus-labs/elements'\n\nconst Button = (props) => {\n  const { active } = props\n\n  return (\n    <Element\n      {...props}\n      label=\"Click on me\"\n      tag=\"button\"\n      style={{\n        background: active ? '#54D6FF' : 'rgba(84, 214, 255, 0.4)',\n        border: '1px solid #54D6FF',\n        padding: '8px 16px',\n        color: '#fff',\n        borderRadius: 4,\n        outline: 'none',\n      }}\n    />\n  )\n}\n\nconst Content = (props) => (\n  <Element\n    contentDirection=\"rows\"\n    style={{\n      backgroundColor: '#fff',\n      color: '#000',\n      padding: 8,\n      borderRadius: 8,\n    }}\n    {...props}\n  />\n)\n\nconst Item = ({ label }) => (\n  <Element\n    label={label}\n    style={{\n      width: 200,\n      height: 40,\n      borderBottom: '1px solid rgba(84, 214, 255, 0.4)',\n    }}\n  />\n)\n\n// \\u2193\\u2193\\u2193 Overlay \\u2193\\u2193\\u2193\nrender(\n  <Overlay trigger={Button} refName=\"innerRef\" offsetY={8}>\n    <Content>\n      <Item label=\"Item A\" />\n      <Item label=\"Item B\" />\n      <Item label=\"Item C\" />\n      <Item label=\"Item D\" />\n    </Content>\n  </Overlay>\n)\n`)),mdx(\"h3\",null,\"Creating a tooltips\"),mdx(\"p\",null,`For shorter texts, or inline texts sometimes it's nicer to write\ninline prop. If you prefer using it this way, then `,mdx(\"strong\",{parentName:\"p\"},\"label\"),` prop\ncould be used. In case of passing both `,mdx(\"strong\",{parentName:\"p\"},\"children\"),\" and \",mdx(\"strong\",{parentName:\"p\"},\"label\"),`,\nthen `,mdx(\"strong\",{parentName:\"p\"},\"children\"),\" will have a priority and \",mdx(\"strong\",{parentName:\"p\"},\"label\"),\" will be ignored.\"),mdx(\"pre\",null,mdx(\"code\",t({parentName:\"pre\"},{className:\"language-tsx\"}),`// import { Overlay, Element } from '@vitus-labs/elements'\n\nconst Button = (props) => (\n  <Element\n    {...props}\n    label=\"Hover on me\"\n    tag=\"button\"\n    style={{\n      background: 'rgba(84, 214, 255, 0.4)',\n      border: '1px solid #54D6FF',\n      padding: '8px 16px',\n      color: '#fff',\n      borderRadius: 4,\n      outline: 'none',\n    }}\n  />\n)\n\nconst Content = (props) => (\n  <Element\n    style={{\n      backgroundColor: '#fff',\n      color: '#000',\n      padding: 8,\n      borderRadius: 8,\n    }}\n    {...props}\n  >\n    Some content here\n  </Element>\n)\n\n// \\u2193\\u2193\\u2193 Overlay \\u2193\\u2193\\u2193\nrender(\n  <Overlay\n    trigger={Button}\n    refName=\"innerRef\"\n    openOn=\"hover\"\n    closeOn=\"hover\"\n    align=\"top\"\n    alignX=\"center\"\n    offsetY={8}\n  >\n    <Content />\n  </Overlay>\n)\n`)),mdx(\"h2\",null,\"Overlay Properties\"),mdx(\"p\",null,\"These are props to which can be passed to \",mdx(\"strong\",{parentName:\"p\"},\"Overlay\")),mdx(\"table\",null,mdx(\"thead\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"thead\"},mdx(\"th\",t({parentName:\"tr\"},{align:null}),\"Name\"),mdx(\"th\",t({parentName:\"tr\"},{align:null}),\"Type\"),mdx(\"th\",t({parentName:\"tr\"},{align:\"center\"}),\"Default value\"),mdx(\"th\",t({parentName:\"tr\"},{align:\"left\"}),\"Description\"))),mdx(\"tbody\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"children\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"ReactNode\")),mdx(\"td\",t({parentName:\"tr\"},{align:\"center\"})),mdx(\"td\",t({parentName:\"tr\"},{align:\"left\"}),\"A content to be rendered when Overlay is open.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"trigger\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"ComponentType\")),mdx(\"td\",t({parentName:\"tr\"},{align:\"center\"})),mdx(\"td\",t({parentName:\"tr\"},{align:\"left\"}),\"An element to be used to trigger opening an overlay element.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"triggerRefName\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"string\")),mdx(\"td\",t({parentName:\"tr\"},{align:\"center\"})),mdx(\"td\",t({parentName:\"tr\"},{align:\"left\"}),\"A key name how a \",mdx(\"strong\",{parentName:\"td\"},\"ref\"),\" should be passed to trigger component\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"contentRefName\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"string\")),mdx(\"td\",t({parentName:\"tr\"},{align:\"center\"})),mdx(\"td\",t({parentName:\"tr\"},{align:\"left\"}),\"A key name how a \",mdx(\"strong\",{parentName:\"td\"},\"ref\"),\" should be passed to content component\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"DOMLocation\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"HTMLElement\")),mdx(\"td\",t({parentName:\"tr\"},{align:\"center\"})),mdx(\"td\",t({parentName:\"tr\"},{align:\"left\"}),\"It uses in the background \",mdx(\"strong\",{parentName:\"td\"},\"React Portal\"),\", so you can define where in the DOM the \",mdx(\"strong\",{parentName:\"td\"},\"Overlay\"),\" content should be attached\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"isOpen\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"boolean\")),mdx(\"td\",t({parentName:\"tr\"},{align:\"center\"}),\"false\"),mdx(\"td\",t({parentName:\"tr\"},{align:\"left\"}),\"Defines whether it should be open by default or not\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"openOn\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"click\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"hover\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"manual\")),mdx(\"td\",t({parentName:\"tr\"},{align:\"center\"}),\"click\"),mdx(\"td\",t({parentName:\"tr\"},{align:\"left\"}),\"Defines on which action it should get opened\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"closeOn\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"click\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"triggerClick\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"hover\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"manual\")),mdx(\"td\",t({parentName:\"tr\"},{align:\"center\"}),\"click\"),mdx(\"td\",t({parentName:\"tr\"},{align:\"left\"}),\"Defines on which action it should get closed\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"type\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"dropdown\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"tooltip\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"popover\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"modal\")),mdx(\"td\",t({parentName:\"tr\"},{align:\"center\"}),\"dropdown\"),mdx(\"td\",t({parentName:\"tr\"},{align:\"left\"}),\"Defines type of your overlay window and based on it it defines its behavior\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"refName\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"string\")),mdx(\"td\",t({parentName:\"tr\"},{align:\"center\"}),\"ref\"),mdx(\"td\",t({parentName:\"tr\"},{align:\"left\"}),\"Overlay component access \",mdx(\"strong\",{parentName:\"td\"},\"ref\"),\" to directly mutate styles when calculation position to prevent re-renders. It's being used for both \",mdx(\"strong\",{parentName:\"td\"},\"trigger\"),\", and \",mdx(\"strong\",{parentName:\"td\"},\"children\"),\" element at the same time. Your components must accept refs with the same naming.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"position\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"fixed\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"absolute\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"relative\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"static\")),mdx(\"td\",t({parentName:\"tr\"},{align:\"center\"}),\"fixed\"),mdx(\"td\",t({parentName:\"tr\"},{align:\"left\"}),\"Just a CSS property to be used for styling overlay element. You can change it's behavior when necessary. Accepts all available CSS position values.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"align\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"top\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"left\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"right\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"bottom\")),mdx(\"td\",t({parentName:\"tr\"},{align:\"center\"}),\"bottom\"),mdx(\"td\",t({parentName:\"tr\"},{align:\"left\"}),\"On which side it should be aligned to \",mdx(\"strong\",{parentName:\"td\"},\"trigger\"))),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"alignX\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"left\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"center\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"right\")),mdx(\"td\",t({parentName:\"tr\"},{align:\"center\"}),\"left\"),mdx(\"td\",t({parentName:\"tr\"},{align:\"left\"}),\"It will calculate it's position horizontally based on \",mdx(\"strong\",{parentName:\"td\"},\"align\"),\" value. This will take an effect only when \",mdx(\"strong\",{parentName:\"td\"},\"align\"),\" is set to either \",mdx(\"strong\",{parentName:\"td\"},\"top\"),\", or \",mdx(\"strong\",{parentName:\"td\"},\"bottom\"))),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"alignY\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"top\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"center\"),\" \",mdx(\"strong\",{parentName:\"td\"},\"bottom\")),mdx(\"td\",t({parentName:\"tr\"},{align:\"center\"}),\"bottom\"),mdx(\"td\",t({parentName:\"tr\"},{align:\"left\"}),\"It will calculate it's position horizontally based on \",mdx(\"strong\",{parentName:\"td\"},\"align\"),\" value. This will take an effect only when \",mdx(\"strong\",{parentName:\"td\"},\"align\"),\" is set to either \",mdx(\"strong\",{parentName:\"td\"},\"left\"),\", or \",mdx(\"strong\",{parentName:\"td\"},\"right\"))),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"offsetX\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"number\")),mdx(\"td\",t({parentName:\"tr\"},{align:\"center\"}),\"0\"),mdx(\"td\",t({parentName:\"tr\"},{align:\"left\"}),\"Horizontal offset value from \",mdx(\"strong\",{parentName:\"td\"},\"trigger\"),\" element\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"offsetY\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"number\")),mdx(\"td\",t({parentName:\"tr\"},{align:\"center\"}),\"0\"),mdx(\"td\",t({parentName:\"tr\"},{align:\"left\"}),\"Vertical offset value from \",mdx(\"strong\",{parentName:\"td\"},\"trigger\"),\" element\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",t({parentName:\"tr\"},{align:null}),\"throttleDelay\"),mdx(\"td\",t({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"number\")),mdx(\"td\",t({parentName:\"tr\"},{align:\"center\"}),\"200\"),mdx(\"td\",t({parentName:\"tr\"},{align:\"left\"}),\"An optimization value, being used for calculations.\")))))}MDXContent.isMDXComponent=!0;\n","scope":{}}},"__N_SSG":true}