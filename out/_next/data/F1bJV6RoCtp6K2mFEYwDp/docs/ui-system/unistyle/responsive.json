{"pageProps":{"meta":{"title":"","description":""},"menu":[{"title":"Getting started","slug":"/docs/ui-system/unistyle/getting-started","submenu":[{"title":"Motivation","anchor":"/docs/ui-system/unistyle/getting-started#motivation"},{"title":"Installation","anchor":"/docs/ui-system/unistyle/getting-started#installation"},{"title":"Dependencies","anchor":"/docs/ui-system/unistyle/getting-started#dependencies"},{"title":"Hooks","anchor":"/docs/ui-system/unistyle/getting-started#hooks"},{"title":"Responsive","anchor":"/docs/ui-system/unistyle/getting-started#responsive"},{"title":"Units","anchor":"/docs/ui-system/unistyle/getting-started#units"},{"title":"Style utilities","anchor":"/docs/ui-system/unistyle/getting-started#style-utilities"}]},{"title":"Styles","slug":"/docs/ui-system/unistyle/styles","submenu":[{"title":"Flex alignment","anchor":"/docs/ui-system/unistyle/styles#flex-alignment"},{"title":"Extend Css","anchor":"/docs/ui-system/unistyle/styles#extend-css"},{"title":"Styles","anchor":"/docs/ui-system/unistyle/styles#styles"}]},{"title":"Responsive","slug":"/docs/ui-system/unistyle/responsive","submenu":[{"title":"Create media queries","anchor":"/docs/ui-system/unistyle/responsive#create-media-queries"},{"title":"Make it responsive","anchor":"/docs/ui-system/unistyle/responsive#make-it-responsive"},{"title":"Normalize theme","anchor":"/docs/ui-system/unistyle/responsive#normalize-theme"},{"title":"Sort breakpoints","anchor":"/docs/ui-system/unistyle/responsive#sort-breakpoints"},{"title":"Breakpoints","anchor":"/docs/ui-system/unistyle/responsive#breakpoints"}]},{"title":"Units","slug":"/docs/ui-system/unistyle/units","submenu":[{"title":"Strip unit","anchor":"/docs/ui-system/unistyle/units#strip-unit"},{"title":"Normalize unit","anchor":"/docs/ui-system/unistyle/units#normalize-unit"},{"title":"Value","anchor":"/docs/ui-system/unistyle/units#value"}]},{"title":"Hooks","slug":"/docs/ui-system/unistyle/hooks","submenu":[{"title":"useWindowResize","anchor":"/docs/ui-system/unistyle/hooks#usewindowresize"}]},{"title":"Utils","slug":"/docs/ui-system/unistyle/utils","submenu":[{"title":"Breakpoints","anchor":"/docs/ui-system/unistyle/utils#breakpoints"},{"title":"Align content","anchor":"/docs/ui-system/unistyle/utils#align-content"},{"title":"Extended Css","anchor":"/docs/ui-system/unistyle/utils#extended-css"}]}],"content":{"compiledSource":"var c=Object.defineProperty,d=Object.defineProperties;var u=Object.getOwnPropertyDescriptors;var n=Object.getOwnPropertySymbols;var i=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;var l=(e,s,t)=>s in e?c(e,s,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[s]=t,a=(e,s)=>{for(var t in s||(s={}))i.call(s,t)&&l(e,t,s[t]);if(n)for(var t of n(s))r.call(s,t)&&l(e,t,s[t]);return e},p=(e,s)=>d(e,u(s));var m=(e,s)=>{var t={};for(var o in e)i.call(e,o)&&s.indexOf(o)<0&&(t[o]=e[o]);if(e!=null&&n)for(var o of n(e))s.indexOf(o)<0&&r.call(e,o)&&(t[o]=e[o]);return t};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(t){var o=t,{components:e}=o,s=m(o,[\"components\"]);return mdx(MDXLayout,p(a(a({},layoutProps),s),{components:e,mdxType:\"MDXLayout\"}),mdx(\"h1\",null,\"Responsive\"),mdx(\"h2\",null,\"Create media queries\"),mdx(\"p\",null,mdx(\"inlineCode\",{parentName:\"p\"},\"createMediaQueries\"),\" helps automatically generate CSS \",mdx(\"inlineCode\",{parentName:\"p\"},\"media queries\"),`\nbased on defined `,mdx(\"strong\",{parentName:\"p\"},\"breakpoints\"),\" and \",mdx(\"strong\",{parentName:\"p\"},\"rootSize\"),`. As this is not related\ndirectly on `,mdx(\"inlineCode\",{parentName:\"p\"},\"styled-components\"),\", you need to pass a \",mdx(\"inlineCode\",{parentName:\"p\"},\"css\"),` function\nas well.`),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-tsx\",metastring:\"editor=false live=false\",editor:\"false\",live:\"false\"}),`import { createMediaQueries } from '@vitus-labs/unistyle'\nimport { css } from 'styled-components'\n\nconst breakpoints = {\n  xs: 0,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200,\n}\n\n// output will be\n// {\n//   xs: \\`css function\\`,\n//   sm: \\`css function\\`,\n//   md: \\`css function\\`,\n//   lg: \\`css function\\`,\n//   xl: \\`css function\\`,\n// }\nconst media = createMediaQueries({ rootSize: 16, css, breakpoints })\n\n// usage\nconst styles = css\\`\n  // you can or you don't have to use a breakpoint with value \\`0\\` as\n  // it returns plain css, not any media query\n  // for better readability you may want to use it\n  \\${media.xs\\`\n    {/* ...some css */}\n  \\`};\n\n  \\${media.md\\`\n    {/* ...some css */}\n  \\`};\n\\`\n`)),mdx(\"h2\",null,\"Make it responsive\"),mdx(\"p\",null,mdx(\"inlineCode\",{parentName:\"p\"},\"makeItResponsive\"),` helps you convert object of CSS properties and convert it into CSS\nincluding media queries.`),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-tsx\",metastring:\"editor=false live=false\",editor:\"false\",live:\"false\"}),`import { makeItResponsive } from '@vitus-labs/unistyle'\nimport { css } from 'styled-components'\n\nconst breakpoints = {\n  xs: 0,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200,\n}\n\n// output will be\n// {\n//   xs: \\`css function\\`,\n//   sm: \\`css function\\`,\n//   md: \\`css function\\`,\n//   lg: \\`css function\\`,\n//   xl: \\`css function\\`,\n// }\nconst media = createMediaQueries({ rootSize: 16, css, breakpoints })\n\n// usage\nconst styles = css\\`\n  // you can or you don't have to use a breakpoint with value \\`0\\` as\n  // it returns plain css, not any media query\n  // for better readability you may want to use it\n  \\${media.xs\\`\n    {/* ...some css */}\n  \\`};\n\n  \\${media.md\\`\n    {/* ...some css */}\n  \\`};\n\\`\n`)),mdx(\"h2\",null,\"Normalize theme\"),mdx(\"h2\",null,\"Sort breakpoints\"),mdx(\"p\",null,mdx(\"inlineCode\",{parentName:\"p\"},\"sortBreakpoints\"),` helps sort breakpoints from the smallest one to\nthe biggest one. It might be useful in case your order of breakpoints\nis not sorted automatically and returns sorted array of breakpoint keys\nfrom the smallest breakboint.`),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-tsx\",metastring:\"editor=false live=false\",editor:\"false\",live:\"false\"}),`import { sortBreakpoints } from '@vitus-labs/unistyle'\n\n// not sorted by default\nconst breakpoints = {\n  xl: 1200,\n  sm: 576,\n  md: 768,\n  xs: 0,\n  lg: 992,\n}\n\n// output will be ['xs', 'sm', 'md', 'lg', 'xl']\nconst result = sortBreakpoints(breakpoints)\n`)),mdx(\"h2\",null,\"Breakpoints\"),mdx(\"p\",null,`Default predefined breakpoints in JSON to be ready to use\nwith all other responsive functions within this package.`),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-tsx\",metastring:\"editor=false live=false\",editor:\"false\",live:\"false\"}),`import { breakpoints } from '@vitus-labs/unistyle'\n\n// this is what you get\nconst result = {\n  rootSize: 16,\n  breakpoints: {\n    xs: 0,\n    sm: 576,\n    md: 768,\n    lg: 992,\n    xl: 1200,\n    xxl: 1440,\n  },\n}\n`)))}MDXContent.isMDXComponent=!0;\n","scope":{}}},"__N_SSG":true}