{"pageProps":{"meta":{"name":"Lint / Getting Started","title":"","description":""},"menu":[{"title":"Lint your code","slug":"/docs/tooling/lint/getting-started","submenu":[{"title":"Motivation","anchor":"/docs/tooling/lint/getting-started#motivation"},{"title":"What is packed inside","anchor":"/docs/tooling/lint/getting-started#what-is-packed-inside"},{"title":"Installation","anchor":"/docs/tooling/lint/getting-started#installation"},{"title":"Dependencies","anchor":"/docs/tooling/lint/getting-started#dependencies"},{"title":"Usage","anchor":"/docs/tooling/lint/getting-started#usage"}]}],"content":{"compiledSource":"var m=Object.defineProperty,g=Object.defineProperties;var c=Object.getOwnPropertyDescriptors;var r=Object.getOwnPropertySymbols;var l=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable;var o=(t,n,a)=>n in t?m(t,n,{enumerable:!0,configurable:!0,writable:!0,value:a}):t[n]=a,e=(t,n)=>{for(var a in n||(n={}))l.call(n,a)&&o(t,a,n[a]);if(r)for(var a of r(n))p.call(n,a)&&o(t,a,n[a]);return t},s=(t,n)=>g(t,c(n));var d=(t,n)=>{var a={};for(var i in t)l.call(t,i)&&n.indexOf(i)<0&&(a[i]=t[i]);if(t!=null&&r)for(var i of r(t))n.indexOf(i)<0&&p.call(t,i)&&(a[i]=t[i]);return a};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(a){var i=a,{components:t}=i,n=d(i,[\"components\"]);return mdx(MDXLayout,s(e(e({},layoutProps),n),{components:t,mdxType:\"MDXLayout\"}),mdx(\"h1\",null,\"Lint your code\"),mdx(\"p\",null,\"Lint is an opinionated preconfigured set of \",mdx(\"inlineCode\",{parentName:\"p\"},\"eslint\"),\" and \",mdx(\"inlineCode\",{parentName:\"p\"},\"stylelint\"),` plugins\nready to use. The package is based on `,mdx(\"inlineCode\",{parentName:\"p\"},\"airbnb\"),\" rules and extends them.\"),mdx(\"h2\",null,\"Motivation\"),mdx(\"p\",null,\"Project without \",mdx(\"inlineCode\",{parentName:\"p\"},\"linting\"),` is a project slowly diving to hell. Repeatable\nconfiguration is not funny at all, therefore this is why this package exists.\nThis package eliminates repeating eslint configuration for each new starting\nproject and handles conflict rules at one place so you don't have to.`),mdx(\"h2\",null,\"What is packed inside\"),mdx(\"ol\",null,mdx(\"li\",{parentName:\"ol\"},mdx(\"p\",{parentName:\"li\"},mdx(\"strong\",{parentName:\"p\"},\"ESLint basics\"),`\nContains the most basic JavaScript/TypeScript rules.`)),mdx(\"li\",{parentName:\"ol\"},mdx(\"p\",{parentName:\"li\"},mdx(\"strong\",{parentName:\"p\"},\"Imports\"),`\nContains an `,mdx(\"a\",e({parentName:\"p\"},{href:\"https://github.com/benmosher/eslint-plugin-import\"}),\"import plugin\"),`\nfor import/export syntax, and prevent issues with misspelling of file paths\nand import names. Imports works with `,mdx(\"inlineCode\",{parentName:\"p\"},\"absolute\"),\" paths as well!\")),mdx(\"li\",{parentName:\"ol\"},mdx(\"p\",{parentName:\"li\"},mdx(\"strong\",{parentName:\"p\"},\"Typescript\"),`\nBuilt in support for `,mdx(\"a\",e({parentName:\"p\"},{href:\"https://www.typescriptlang.org/\"}),\"TypeScript\"),` and even\nfor using TypeScript in monorepositories. Each package can have its own\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"tsconfig.json\"),\" file with predefined paths used for \",mdx(\"inlineCode\",{parentName:\"p\"},\"absolute imports\"),`.\nIt will work out of the box.`)),mdx(\"li\",{parentName:\"ol\"},mdx(\"p\",{parentName:\"li\"},mdx(\"strong\",{parentName:\"p\"},\"React\"),`\nPackage has support for `,mdx(\"inlineCode\",{parentName:\"p\"},\"React\"),\" ecosystem including \",mdx(\"inlineCode\",{parentName:\"p\"},\"accessibility\"),\" and \",mdx(\"inlineCode\",{parentName:\"p\"},\"hooks\"),\".\")),mdx(\"li\",{parentName:\"ol\"},mdx(\"p\",{parentName:\"li\"},mdx(\"strong\",{parentName:\"p\"},\"StyleLint\"),`\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"Lint\"),\" package contains \",mdx(\"inlineCode\",{parentName:\"p\"},\"styling\"),\" linter as well with support for \",mdx(\"inlineCode\",{parentName:\"p\"},\"styled-components\"),\".\")),mdx(\"li\",{parentName:\"ol\"},mdx(\"p\",{parentName:\"li\"},mdx(\"strong\",{parentName:\"p\"},\"Prettier\"),`\nLinting works nicely even with `,mdx(\"inlineCode\",{parentName:\"p\"},\"prettier\"),\".\"))),mdx(\"h2\",null,\"Installation\"),mdx(\"p\",null,\"You can install it with your preferred tool (\",mdx(\"inlineCode\",{parentName:\"p\"},\"yarn\"),\" or \",mdx(\"inlineCode\",{parentName:\"p\"},\"npm\"),\").\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-bash\",metastring:\"editor=false live=false\",editor:\"false\",live:\"false\"}),`# with yarn\nyarn add @vitus-labs/tools-lint\n\n# or with npm\nnpm install @vitus-labs/tools-lint --save\n`)),mdx(\"p\",null,`There is no need to install any other dependencies. Everything what this package needs\nis installed as direct `,mdx(\"inlineCode\",{parentName:\"p\"},\"dependencies\"),` of this package. This makes it also comfortable\nand helps prevent conflicts between packages versions.`),mdx(\"h2\",null,\"Dependencies\"),mdx(\"p\",null,`Lint depends on the following packages which doesn't have to be installed\nseparately at all.`),mdx(\"table\",null,mdx(\"thead\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"thead\"},mdx(\"th\",e({parentName:\"tr\"},{align:null}),\"Package\"))),mdx(\"tbody\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"@typescript-eslint/eslint-plugin\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"@typescript-eslint/parser\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"eslint\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"eslint-config-airbnb\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"eslint-config-prettier\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"eslint-import-resolver-typescript\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"eslint-plugin-import\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"eslint-plugin-jsx-a11y\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"eslint-plugin-markdown\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"eslint-plugin-prettier\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"eslint-plugin-react\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"eslint-plugin-react-hooks\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"stylelint\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"stylelint-config-prettier\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"stylelint-config-recommended\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"stylelint-config-styled-components\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"stylelint-processor-styled-components\")))),mdx(\"h2\",null,\"Usage\"),mdx(\"h3\",null,\"ESLint\"),mdx(\"p\",null,\"For using \",mdx(\"inlineCode\",{parentName:\"p\"},\"ESLint\"),\" rules, create an \",mdx(\"inlineCode\",{parentName:\"p\"},\".eslint.js\"),` file in the root of your\nproject (a single app or monorepo) and add rules.`),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"editor=false live=false\",editor:\"false\",live:\"false\"}),`module.exports = require('@vitus-labs/tools-lint/eslint')\n`)),mdx(\"h3\",null,\"Stylelint\"),mdx(\"p\",null,\"Basically, the same approach as in case of \",mdx(\"inlineCode\",{parentName:\"p\"},\"ESLint\"),` applies here.\nCreate a file `,mdx(\"inlineCode\",{parentName:\"p\"},\"stylelint.config.js\"),\" and import rules.\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"editor=false live=false\",editor:\"false\",live:\"false\"}),`module.exports = require('@vitus-labs/tools-lint/styles')\n`)),mdx(\"p\",null,\"Now you are ready to lint your code.\"),mdx(\"p\",null,\"Happy linting!\"))}MDXContent.isMDXComponent=!0;\n","scope":{}}},"__N_SSG":true}