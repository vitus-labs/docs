{"pageProps":{"meta":{"title":"Unistyle \\ Getting started","description":""},"menu":[{"title":"Getting started","slug":"/docs/ui-system/unistyle/getting-started","submenu":[{"title":"Motivation","anchor":"/docs/ui-system/unistyle/getting-started#motivation"},{"title":"Installation","anchor":"/docs/ui-system/unistyle/getting-started#installation"},{"title":"Dependencies","anchor":"/docs/ui-system/unistyle/getting-started#dependencies"},{"title":"Responsive","anchor":"/docs/ui-system/unistyle/getting-started#responsive"},{"title":"Units","anchor":"/docs/ui-system/unistyle/getting-started#units"},{"title":"Style utilities","anchor":"/docs/ui-system/unistyle/getting-started#style-utilities"}]},{"title":"Styles","slug":"/docs/ui-system/unistyle/styles","submenu":[{"title":"Flex alignment","anchor":"/docs/ui-system/unistyle/styles#flex-alignment"},{"title":"Extend Css","anchor":"/docs/ui-system/unistyle/styles#extend-css"},{"title":"Styles","anchor":"/docs/ui-system/unistyle/styles#styles"}]},{"title":"Responsive","slug":"/docs/ui-system/unistyle/responsive","submenu":[{"title":"Create media queries","anchor":"/docs/ui-system/unistyle/responsive#create-media-queries"},{"title":"Make it responsive","anchor":"/docs/ui-system/unistyle/responsive#make-it-responsive"},{"title":"Normalize theme","anchor":"/docs/ui-system/unistyle/responsive#normalize-theme"},{"title":"Sort breakpoints","anchor":"/docs/ui-system/unistyle/responsive#sort-breakpoints"},{"title":"Breakpoints","anchor":"/docs/ui-system/unistyle/responsive#breakpoints"}]},{"title":"Units","slug":"/docs/ui-system/unistyle/units","submenu":[{"title":"Strip unit","anchor":"/docs/ui-system/unistyle/units#strip-unit"},{"title":"Normalize unit","anchor":"/docs/ui-system/unistyle/units#normalize-unit"},{"title":"Value","anchor":"/docs/ui-system/unistyle/units#value"}]},{"title":"Utils","slug":"/docs/ui-system/unistyle/utils","submenu":[{"title":"Breakpoints","anchor":"/docs/ui-system/unistyle/utils#breakpoints"},{"title":"Align content","anchor":"/docs/ui-system/unistyle/utils#align-content"},{"title":"Extended Css","anchor":"/docs/ui-system/unistyle/utils#extended-css"}]}],"content":{"compiledSource":"var d=Object.defineProperty,u=Object.defineProperties;var c=Object.getOwnPropertyDescriptors;var i=Object.getOwnPropertySymbols;var r=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable;var l=(t,a,n)=>a in t?d(t,a,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[a]=n,e=(t,a)=>{for(var n in a||(a={}))r.call(a,n)&&l(t,n,a[n]);if(i)for(var n of i(a))o.call(a,n)&&l(t,n,a[n]);return t},p=(t,a)=>u(t,c(a));var m=(t,a)=>{var n={};for(var s in t)r.call(t,s)&&a.indexOf(s)<0&&(n[s]=t[s]);if(t!=null&&i)for(var s of i(t))a.indexOf(s)<0&&o.call(t,s)&&(n[s]=t[s]);return n};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(n){var s=n,{components:t}=s,a=m(s,[\"components\"]);return mdx(MDXLayout,p(e(e({},layoutProps),a),{components:t,mdxType:\"MDXLayout\"}),mdx(\"h1\",null,\"Getting started\"),mdx(\"p\",null,`Unistyle is a collection of styling utilities with a goal to simplify\na daily struggles with styling from parsng JSON styling object into valid\nCSS styles, automatically converted units following best practices\nor creating responsive styles with less pain.`),mdx(\"h2\",null,\"Motivation\"),mdx(\"p\",null,`The goal is to cover many repeatable use-cases of writing code and make\nbanch of functions which would solve this. For a better day, you don't\nhave to focus on such a things with low impact on your business. Instead,\nyou can simply let a computer do it for you.`),mdx(\"h2\",null,\"Installation\"),mdx(\"p\",null,\"You can install it with your preferred tool (\",mdx(\"strong\",{parentName:\"p\"},\"yarn\"),\" or \",mdx(\"strong\",{parentName:\"p\"},\"npm\"),\").\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-bash\"}),`  yarn add @vitus-labs/unistyle @vitus-labs/core\n`)),mdx(\"h2\",null,\"Dependencies\"),mdx(\"p\",null,`Elements depends on the following packages which need to be installed as\nwell.`),mdx(\"table\",null,mdx(\"thead\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"thead\"},mdx(\"th\",e({parentName:\"tr\"},{align:null}),\"Package\"),mdx(\"th\",e({parentName:\"tr\"},{align:null}),\"Version\"))),mdx(\"tbody\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"react\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\">= 16.8\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"styled-components\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\">= 5.0\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"@vitus-labs/core\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"same version\")))),mdx(\"p\",null,\"Styled-components are a peer dependency of \",mdx(\"strong\",{parentName:\"p\"},\"@vitus-labs/core\"),\".\"),mdx(\"p\",null,\"Package is split into four logical parts:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"responsive\"),mdx(\"li\",{parentName:\"ul\"},\"styles\"),mdx(\"li\",{parentName:\"ul\"},\"units\")),mdx(\"p\",null,\"Now let's take a look at a brief description of all of them.\"),mdx(\"h2\",null,\"Responsive\"),mdx(\"h3\",null,\"Make it responsive\"),mdx(\"p\",null,mdx(\"inlineCode\",{parentName:\"p\"},\"makeItResponsive\"),\" converts large \",mdx(\"strong\",{parentName:\"p\"},\"object\"),` styling configurations into\nsingle `,mdx(\"inlineCode\",{parentName:\"p\"},\"css\"),\" output with automatically generated \",mdx(\"strong\",{parentName:\"p\"},\"media queries\"),\".\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\",metastring:\"editor=false live=false\",editor:\"false\",live:\"false\"}),`import { makeItResponsive } from '@vitus-labs/unistyle'\n\n// breakpoint keys\n// xs, sm, md, lg, xl, xxl\n\nconst styles = {\n  fontSize: 16,\n  backgroundColor: '#fff',\n  // passing object example\n  marginX: {\n    xs: 8,\n    md: 16,\n    xl: 32,\n  },\n  // passing an array example\n  marginY: [4, 8, 16], // [xs, sm, md]\n}\n\nconst result = makeItResponsive({\n  /*\n    theme: to be trasnformed\n    key: a key under which can be found theme in props\n    css: css function\n    styles: a callback of styles\n    normalize: whether the output should be normalized\n  */\n})({\n  /*\n    theme: global app theme passed via context\n  */\n})\n`)),mdx(\"h3\",null,\"Optimize theme\"),mdx(\"h3\",null,\"Breakpoints\"),mdx(\"p\",null,`Default predefined breakpoints in JSON to be ready to use\nwith all other responsive functions within this package.`),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\",metastring:\"editor=false live=false\",editor:\"false\",live:\"false\"}),`import { breakpoints } from '@vitus-labs/unistyle'\n\n// this is what you get\nconst result = {\n  rootSize: 16,\n  breakpoints: {\n    xs: 0,\n    sm: 576,\n    md: 768,\n    lg: 992,\n    xl: 1200,\n  },\n}\n`)),mdx(\"h3\",null,\"Sort breakpoints\"),mdx(\"p\",null,`Just sorts breakpoints from the smallest one to the biggest one.\nIt might be useful in case your order of breakpoints is not sorted\nautomatically and returns array of breakpoint keys`),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\",metastring:\"editor=false live=false\",editor:\"false\",live:\"false\"}),`import { sortBreakpoints } from '@vitus-labs/unistyle'\n\n// not sorted by default\nconst breakpoints = {\n  xl: 1200,\n  sm: 576,\n  md: 768,\n  xs: 0,\n  lg: 992,\n}\n\n// output will be ['xs', 'sm', 'md', 'lg', 'xl']\nconst result = sortBreakpoints(breakpoints)\n`)),mdx(\"h2\",null,\"Units\"),mdx(\"h3\",null,\"Strip unit\"),mdx(\"p\",null,mdx(\"inlineCode\",{parentName:\"p\"},\"stripUnit\"),\" takes a value and remove unit from it and returns \",mdx(\"inlineCode\",{parentName:\"p\"},\"number\"),`. Eventually,\nit returns a `,mdx(\"inlineCode\",{parentName:\"p\"},\"unit\"),\" together with \",mdx(\"inlineCode\",{parentName:\"p\"},\"value\"),\" in an array when forced.\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\",metastring:\"editor=false live=false\",editor:\"false\",live:\"false\"}),`import { stripUnit } from '@vitus-labs/unistyle'\n\n// returns value only\nconst result = stripUnit('18px') // output 18\n\n// returns also unit\nconst withUnit = stripUnit('18px', true) // returns [18, 'px']\n`)),mdx(\"h3\",null,\"Normalize unit\"),mdx(\"p\",null,mdx(\"inlineCode\",{parentName:\"p\"},\"normalizeUnit\"),\" converts the \",mdx(\"inlineCode\",{parentName:\"p\"},\"param\"),` value to appropriate unit based on\ndefined `,mdx(\"strong\",{parentName:\"p\"},\"rootSize\")),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\",metastring:\"editor=false live=false\",editor:\"false\",live:\"false\"}),`import { normalizeUnit } from '@vitus-labs/unistyle'\n\n// output will be \\`2rem\\`\nconst example = normalizeUnit({\n  param: '32px',\n  rootSize: 16,\n  outputUnit: 'rem',\n})\n`)),mdx(\"h3\",null,\"Value\"),mdx(\"p\",null,mdx(\"inlineCode\",{parentName:\"p\"},\"Value\"),\" takes an array of values and converts them to appropriate units.\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\",metastring:\"editor=false live=false\",editor:\"false\",live:\"false\"}),`import { value } from '@vitus-labs/unistyle'\n\n// output will be \\`0\\`\nconst example = value(16, [0, 16, 32, 64], 'rem')\n\n// output will be \\`[0, '0.75rem', '1.5rem']\\`\nconst exampleArray = value(16, [[0, 12, 24], 16, 32, 64], 'rem')\n`)),mdx(\"h2\",null,\"Style utilities\"),mdx(\"h3\",null,\"Styles\"),mdx(\"p\",null,mdx(\"inlineCode\",{parentName:\"p\"},\"Styles\"),\" transforms JSON properties into valid \",mdx(\"inlineCode\",{parentName:\"p\"},\"css\"),` properties, adds several\nopinionated properties on top of that and automatically `,mdx(\"inlineCode\",{parentName:\"p\"},\"converts units\"),`\naccording to current best practices.`),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\",metastring:\"editor=false live=false\",editor:\"false\",live:\"false\"}),`import { styles } from '@vitus-labs/unistyle'\nimport { css } from 'styled-components'\n\nconst theme = {\n  width: 320,\n  backgroundColor: '#fff',\n  paddingX: 16,\n  textAlign: 'center',\n}\n\n// output will be\n// css\\`\n//  width: 20rem;\n//  background-color: #fff;\n//  padding-left: 1rem;\n//  padding-right: 1rem;\n//  text-align: center;\n// \\`\nconst result = styles({ theme, rootSize: 16, css })\n`)),mdx(\"h3\",null,\"Flex alignment\"),mdx(\"p\",null,\"First of utils is \",mdx(\"strong\",{parentName:\"p\"},\"alignContent\"),`, which helps you set correct flex properties.\nHelps to swap between css properties `,mdx(\"strong\",{parentName:\"p\"},\"align-items\"),\" and \",mdx(\"strong\",{parentName:\"p\"},\"justify-content\"),\".\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\",metastring:\"editor=false live=false\",editor:\"false\",live:\"false\"}),`import { alignContent } from '@vitus-labs/unistyle'\n\n// output will be\n// css\\`\n//   flex-direction: row;\n//   align-items: flex-start;\n//   justify-content: center;\n// \\`\nconst result = alignContent({\n  direction: 'inline',\n  alignX: 'center',\n  alignY: 'top',\n})\n\n// output will be\n// css\\`\n//   flex-direction: row;\n//   align-items: center;\n//   justify-content: flex-start;\n// \\`\nconst result = alignContent({\n  direction: 'rows',\n  alignX: 'center',\n  alignY: 'top',\n})\n`)),mdx(\"h3\",null,\"Extend Css\"),mdx(\"p\",null,mdx(\"inlineCode\",{parentName:\"p\"},\"extendCss\"),` is an utility function which can be used for providing\nan extension of current styles and possibility to pass a `,mdx(\"inlineCode\",{parentName:\"p\"},\"css\"),` callback\nvia props (for example).`),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\",metastring:\"editor=false live=false\",editor:\"false\",live:\"false\"}),`import { extendCss } from '@vitus-labs/unistyle'\n\n// usage\nconst styles = (css) => css\\`\n  text-align: center;\n\\`\n`)))}MDXContent.isMDXComponent=!0;\n","scope":{}}},"__N_SSG":true}