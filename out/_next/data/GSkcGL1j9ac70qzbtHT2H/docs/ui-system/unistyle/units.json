{"pageProps":{"meta":{"title":"","description":""},"menu":[{"title":"Getting started","slug":"/docs/ui-system/unistyle/getting-started","submenu":[{"title":"Motivation","anchor":"/docs/ui-system/unistyle/getting-started#motivation"},{"title":"Installation","anchor":"/docs/ui-system/unistyle/getting-started#installation"},{"title":"Dependencies","anchor":"/docs/ui-system/unistyle/getting-started#dependencies"},{"title":"Hooks","anchor":"/docs/ui-system/unistyle/getting-started#hooks"},{"title":"Responsive","anchor":"/docs/ui-system/unistyle/getting-started#responsive"},{"title":"Units","anchor":"/docs/ui-system/unistyle/getting-started#units"},{"title":"Style utilities","anchor":"/docs/ui-system/unistyle/getting-started#style-utilities"}]},{"title":"Styles","slug":"/docs/ui-system/unistyle/styles","submenu":[{"title":"Flex alignment","anchor":"/docs/ui-system/unistyle/styles#flex-alignment"},{"title":"Extend Css","anchor":"/docs/ui-system/unistyle/styles#extend-css"},{"title":"Styles","anchor":"/docs/ui-system/unistyle/styles#styles"}]},{"title":"Responsive","slug":"/docs/ui-system/unistyle/responsive","submenu":[{"title":"Create media queries","anchor":"/docs/ui-system/unistyle/responsive#create-media-queries"},{"title":"Make it responsive","anchor":"/docs/ui-system/unistyle/responsive#make-it-responsive"},{"title":"Normalize theme","anchor":"/docs/ui-system/unistyle/responsive#normalize-theme"},{"title":"Sort breakpoints","anchor":"/docs/ui-system/unistyle/responsive#sort-breakpoints"},{"title":"Breakpoints","anchor":"/docs/ui-system/unistyle/responsive#breakpoints"}]},{"title":"Units","slug":"/docs/ui-system/unistyle/units","submenu":[{"title":"Strip unit","anchor":"/docs/ui-system/unistyle/units#strip-unit"},{"title":"Normalize unit","anchor":"/docs/ui-system/unistyle/units#normalize-unit"},{"title":"Value","anchor":"/docs/ui-system/unistyle/units#value"}]},{"title":"Hooks","slug":"/docs/ui-system/unistyle/hooks","submenu":[{"title":"useWindowResize","anchor":"/docs/ui-system/unistyle/hooks#usewindowresize"}]},{"title":"Utils","slug":"/docs/ui-system/unistyle/utils","submenu":[{"title":"Breakpoints","anchor":"/docs/ui-system/unistyle/utils#breakpoints"},{"title":"Align content","anchor":"/docs/ui-system/unistyle/utils#align-content"},{"title":"Extended Css","anchor":"/docs/ui-system/unistyle/utils#extended-css"}]}],"content":{"compiledSource":"var u=Object.defineProperty,s=Object.defineProperties;var N=Object.getOwnPropertyDescriptors;var l=Object.getOwnPropertySymbols;var i=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable;var p=(t,a,n)=>a in t?u(t,a,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[a]=n,e=(t,a)=>{for(var n in a||(a={}))i.call(a,n)&&p(t,n,a[n]);if(l)for(var n of l(a))o.call(a,n)&&p(t,n,a[n]);return t},d=(t,a)=>s(t,N(a));var m=(t,a)=>{var n={};for(var r in t)i.call(t,r)&&a.indexOf(r)<0&&(n[r]=t[r]);if(t!=null&&l)for(var r of l(t))a.indexOf(r)<0&&o.call(t,r)&&(n[r]=t[r]);return n};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(n){var r=n,{components:t}=r,a=m(r,[\"components\"]);return mdx(MDXLayout,d(e(e({},layoutProps),a),{components:t,mdxType:\"MDXLayout\"}),mdx(\"h1\",null,\"Units\"),mdx(\"p\",null,`A bunch of simple functions which play well when it comes to CSS\nunits.`),mdx(\"h2\",null,\"Strip unit\"),mdx(\"p\",null,mdx(\"inlineCode\",{parentName:\"p\"},\"stripUnit\"),\" takes a value and remove unit from it and returns \",mdx(\"inlineCode\",{parentName:\"p\"},\"number\"),`. Eventually,\nit returns a `,mdx(\"inlineCode\",{parentName:\"p\"},\"unit\"),\" together with \",mdx(\"inlineCode\",{parentName:\"p\"},\"value\"),\" in an array when forced.\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\",metastring:\"editor=false live=false\",editor:\"false\",live:\"false\"}),`import { stripUnit } from '@vitus-labs/unistyle'\n\n// returns value only\nconst result = stripUnit('18px') // output 18\n\n// returns also unit\nconst withUnit = stripUnit('18px', true) // returns [18, 'px']\n`)),mdx(\"h3\",null,\"Properties\"),mdx(\"table\",null,mdx(\"thead\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"thead\"},mdx(\"th\",e({parentName:\"tr\"},{align:null}),\"Name\"),mdx(\"th\",e({parentName:\"tr\"},{align:null}),\"Type\"),mdx(\"th\",e({parentName:\"tr\"},{align:null}),\"Default value\"),mdx(\"th\",e({parentName:\"tr\"},{align:null}),\"Description\"))),mdx(\"tbody\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"arg\",\"[0]\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"string\"),\" \",\"|\",\" \",mdx(\"strong\",{parentName:\"td\"},\"number\")),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"-\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"a value to be stripped out value\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"arg\",\"[1]\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"boolean\")),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"false\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"dforces whether a \",mdx(\"inlineCode\",{parentName:\"td\"},\"unit\"),\" should be returned as well\")))),mdx(\"h2\",null,\"Normalize unit\"),mdx(\"p\",null,mdx(\"inlineCode\",{parentName:\"p\"},\"normalizeUnit\"),\" converts the \",mdx(\"inlineCode\",{parentName:\"p\"},\"param\"),` value to appropriate unit based on\ndefined `,mdx(\"strong\",{parentName:\"p\"},\"rootSize\"),\" value. Uses \",mdx(\"inlineCode\",{parentName:\"p\"},\"stripUnit\"),\" under the hood.\"),mdx(\"p\",null,\"By default it converts \",mdx(\"inlineCode\",{parentName:\"p\"},\"numbers\"),\" or \",mdx(\"inlineCode\",{parentName:\"p\"},\"px\"),\" units into \",mdx(\"inlineCode\",{parentName:\"p\"},\"rem\"),\" values\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\",metastring:\"editor=false live=false\",editor:\"false\",live:\"false\"}),`import { normalizeUnit } from '@vitus-labs/unistyle'\n\n// output will be \\`2rem\\`\nconst example = normalizeUnit({\n  param: '32px',\n  rootSize: 16,\n})\n`)),mdx(\"p\",null,\"You can define optional \",mdx(\"inlineCode\",{parentName:\"p\"},\"outputUnit\"),\" param to define an output unit.\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\",metastring:\"editor=false live=false\",editor:\"false\",live:\"false\"}),`import { normalizeUnit } from '@vitus-labs/unistyle'\n\n// output will be \\`2rem\\`\nconst exampleA = normalizeUnit({\n  param: 32,\n  rootSize: 16,\n  outputUnit: 'rem',\n})\n\n// output will be \\`32px\\`\nconst exampleB = normalizeUnit({\n  param: 32,\n  rootSize: 16,\n  outputUnit: 'px',\n})\n`)),mdx(\"p\",null,\"If value is \",mdx(\"inlineCode\",{parentName:\"p\"},\"0\"),\" or any other \",mdx(\"inlineCode\",{parentName:\"p\"},\"string\"),\" it returns back \",mdx(\"inlineCode\",{parentName:\"p\"},\"0\"),` without unit\nor `,mdx(\"inlineCode\",{parentName:\"p\"},\"string\"),\" which was passed as an input.\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\",metastring:\"editor=false live=false\",editor:\"false\",live:\"false\"}),`import { normalizeUnit } from '@vitus-labs/unistyle'\n\n// output will be \\`0\\`\nconst exampleA = normalizeUnit({\n  param: 0,\n  rootSize: 16,\n  outputUnit: 'px',\n})\n\n// output will be \\`something\\`\nconst exampleB = normalizeUnit({\n  param: 'something',\n  rootSize: 16,\n  outputUnit: 'px',\n})\n`)),mdx(\"h3\",null,\"Properties\"),mdx(\"table\",null,mdx(\"thead\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"thead\"},mdx(\"th\",e({parentName:\"tr\"},{align:null}),\"Name\"),mdx(\"th\",e({parentName:\"tr\"},{align:null}),\"Type\"),mdx(\"th\",e({parentName:\"tr\"},{align:null}),\"Default value\"),mdx(\"th\",e({parentName:\"tr\"},{align:null}),\"Description\"))),mdx(\"tbody\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"param\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"any\")),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"-\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"a value to be converted\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"rootSize\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"number\")),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"16\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"default app root size value\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"outputUnit\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"px\"),\" \",\"|\",\" \",mdx(\"strong\",{parentName:\"td\"},\"rem\"),\" \",\"|\",mdx(\"strong\",{parentName:\"td\"},\"%\"),\" \",\"|\",\" \",mdx(\"strong\",{parentName:\"td\"},\"string\")),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"rem\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"expected output value unit\")))),mdx(\"h2\",null,\"Value\"),mdx(\"p\",null,mdx(\"inlineCode\",{parentName:\"p\"},\"Value\"),` takes an array of values and converts them to appropriate units.\nIt uses `,mdx(\"inlineCode\",{parentName:\"p\"},\"normalizeUnit\"),\" under the hood, but accepts as a param an array.\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\",metastring:\"editor=false live=false\",editor:\"false\",live:\"false\"}),`import { value } from '@vitus-labs/unistyle'\n\n// output will be \\`0\\`\nconst example = value(16, [0, 16, 32, 64], 'rem')\n\n// output will be \\`[0, '0.75rem', '1.5rem']\\`\nconst exampleArray = value(16, [[0, 12, 24], 16, 32, 64], 'rem')\n`)),mdx(\"h3\",null,\"Properties\"),mdx(\"table\",null,mdx(\"thead\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"thead\"},mdx(\"th\",e({parentName:\"tr\"},{align:null}),\"Name\"),mdx(\"th\",e({parentName:\"tr\"},{align:null}),\"Type\"),mdx(\"th\",e({parentName:\"tr\"},{align:null}),\"Default value\"),mdx(\"th\",e({parentName:\"tr\"},{align:null}),\"Description\"))),mdx(\"tbody\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"values \",mdx(\"inlineCode\",{parentName:\"td\"},\"(arg[0])\")),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"Array\",\"[any]\")),mdx(\"td\",e({parentName:\"tr\"},{align:null})),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"forces whether a \",mdx(\"inlineCode\",{parentName:\"td\"},\"unit\"),\" should be returned as well\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"rootSize \",mdx(\"inlineCode\",{parentName:\"td\"},\"(arg[1])\")),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"number\")),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"16\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"a value to be stripped out value\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"outputUnit \",mdx(\"inlineCode\",{parentName:\"td\"},\"(arg[2])\")),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"px\"),\" \",\"|\",\" \",mdx(\"strong\",{parentName:\"td\"},\"rem\"),\" \",\"|\",mdx(\"strong\",{parentName:\"td\"},\"%\"),\" \",\"|\",\" \",mdx(\"strong\",{parentName:\"td\"},\"string\")),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"rem\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"a value to be stripped out value\")))))}MDXContent.isMDXComponent=!0;\n","scope":{}}},"__N_SSG":true}