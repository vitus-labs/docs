{"pageProps":{"meta":{"name":"Rocketstyle \\ Attributes","title":"","description":""},"menu":[{"title":"Getting started","slug":"/docs/ui-system/rocketstyle/getting-started","submenu":[{"title":"Motivation","anchor":"/docs/ui-system/rocketstyle/getting-started#motivation"},{"title":"Installation","anchor":"/docs/ui-system/rocketstyle/getting-started#installation"},{"title":"Getting started","anchor":"/docs/ui-system/rocketstyle/getting-started#getting-started"},{"title":"Create your first component","anchor":"/docs/ui-system/rocketstyle/getting-started#create-your-first-component"},{"title":"Reusability","anchor":"/docs/ui-system/rocketstyle/getting-started#reusability"},{"title":"Responsive styling","anchor":"/docs/ui-system/rocketstyle/getting-started#responsive-styling"},{"title":"Light / dark mode","anchor":"/docs/ui-system/rocketstyle/getting-started#light-/-dark-mode"},{"title":"Extend component","anchor":"/docs/ui-system/rocketstyle/getting-started#extend-component"}]},{"title":"Initialization","slug":"/docs/ui-system/rocketstyle/initialization","submenu":[{"title":"Bootstrap your rocket component","anchor":"/docs/ui-system/rocketstyle/initialization#bootstrap-your-rocket-component"},{"title":"Defining styling dimensions","anchor":"/docs/ui-system/rocketstyle/initialization#defining-styling-dimensions"},{"title":"Defining valid CSS styles","anchor":"/docs/ui-system/rocketstyle/initialization#defining-valid-css-styles"}]},{"title":"Attributes","slug":"/docs/ui-system/rocketstyle/attributes","submenu":[{"title":"Attrs as a plain object","anchor":"/docs/ui-system/rocketstyle/attributes#attrs-as-a-plain-object"},{"title":"Attrs as a callback","anchor":"/docs/ui-system/rocketstyle/attributes#attrs-as-a-callback"}]},{"title":"Theme","slug":"/docs/ui-system/rocketstyle/theme","submenu":[{"title":"Theme as a plain object","anchor":"/docs/ui-system/rocketstyle/theme#theme-as-a-plain-object"},{"title":"Theme as a callback","anchor":"/docs/ui-system/rocketstyle/theme#theme-as-a-callback"}]},{"title":"Compose","slug":"/docs/ui-system/rocketstyle/compose","submenu":[{"title":"An example of using compose","anchor":"/docs/ui-system/rocketstyle/compose#an-example-of-using-compose"}]},{"title":"Pseudo State","slug":"/docs/ui-system/rocketstyle/pseudo-state","submenu":[{"title":"Pseudo component properties","anchor":"/docs/ui-system/rocketstyle/pseudo-state#pseudo-component-properties"},{"title":"Pseudo via context","anchor":"/docs/ui-system/rocketstyle/pseudo-state#pseudo-via-context"},{"title":"Accessing props in styles","anchor":"/docs/ui-system/rocketstyle/pseudo-state#accessing-props-in-styles"}]},{"title":"Dimensions","slug":"/docs/ui-system/rocketstyle/dimensions","submenu":[{"title":"What are dimensions","anchor":"/docs/ui-system/rocketstyle/dimensions#what-are-dimensions"},{"title":"Configuration options","anchor":"/docs/ui-system/rocketstyle/dimensions#configuration-options"},{"title":"Define dimensions","anchor":"/docs/ui-system/rocketstyle/dimensions#define-dimensions"}]}],"content":{"compiledSource":"var m=Object.defineProperty,c=Object.defineProperties;var C=Object.getOwnPropertyDescriptors;var l=Object.getOwnPropertySymbols;var a=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;var p=(e,n,o)=>n in e?m(e,n,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[n]=o,t=(e,n)=>{for(var o in n||(n={}))a.call(n,o)&&p(e,o,n[o]);if(l)for(var o of l(n))r.call(n,o)&&p(e,o,n[o]);return e},s=(e,n)=>c(e,C(n));var d=(e,n)=>{var o={};for(var i in e)a.call(e,i)&&n.indexOf(i)<0&&(o[i]=e[i]);if(e!=null&&l)for(var i of l(e))n.indexOf(i)<0&&r.call(e,i)&&(o[i]=e[i]);return o};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(o){var i=o,{components:e}=i,n=d(i,[\"components\"]);return mdx(MDXLayout,s(t(t({},layoutProps),n),{components:e,mdxType:\"MDXLayout\"}),mdx(\"h1\",null,\"Attributes\"),mdx(\"p\",null,`Rocketstyle allows you to define default component props,\nor even allows you to override them later the way you need.\nSo by default, there is a callback called `,mdx(\"inlineCode\",{parentName:\"p\"},\"attrs\"),` where you\ncan define your default props.`),mdx(\"p\",null,\"For defining default \",mdx(\"inlineCode\",{parentName:\"p\"},\"attrs\"),\" there are two possible choices\"),mdx(\"ol\",null,mdx(\"li\",{parentName:\"ol\"},\"use plain \",mdx(\"inlineCode\",{parentName:\"li\"},\"object\"),\", or\"),mdx(\"li\",{parentName:\"ol\"},\"use a \",mdx(\"inlineCode\",{parentName:\"li\"},\"callback\"),\".\")),mdx(\"p\",null,`Attributes are being calculated each time before component render\nbased on props passed directly to your component in the following\nsteps.`),mdx(\"ol\",null,mdx(\"li\",{parentName:\"ol\"},\"pick props passed directly to the component\"),mdx(\"li\",{parentName:\"ol\"},\"calculate predefined \",mdx(\"inlineCode\",{parentName:\"li\"},\"attrs\"),` callbacks to have correct props\nwhen used a callback`),mdx(\"li\",{parentName:\"ol\"},`shallow merged default attrs and props as following\n`,mdx(\"inlineCode\",{parentName:\"li\"},\"{...attrs, ...props}\"),\" and passed to the component\")),mdx(\"h2\",null,\"Attrs as a plain object\"),mdx(\"p\",null,\"Defining default attrs using a \",mdx(\"strong\",{parentName:\"p\"},\"plain object\"),\" looks following:\"),mdx(\"pre\",null,mdx(\"code\",t({parentName:\"pre\"},{className:\"language-tsx\",metastring:\"editor=false live=false\",editor:\"false\",live:\"false\"}),`import RocketComponent from './ourPath'\n\nconst Component = RocketComponent.attrs({\n  propA: 'something here',\n  propB: 'something else',\n  disabled: false,\n  // ...etc.\n})\n`)),mdx(\"h2\",null,\"Attrs as a callback\"),mdx(\"p\",null,\"Defining default attrs using a \",mdx(\"strong\",{parentName:\"p\"},\"callback\"),\" looks following:\"),mdx(\"pre\",null,mdx(\"code\",t({parentName:\"pre\"},{className:\"language-tsx\",metastring:\"editor=false live=false\",editor:\"false\",live:\"false\"}),`import RocketComponent from './ourPath'\n\nconst Component = RocketComponent.attrs((props, theme, utils) => ({\n  propA: props.disabled ? 'Disabled' : 'Enabled',\n  propB: 'something else',\n  style: {\n    color: theme.color.primary,\n  },\n  // ...etc.\n}))\n`)),mdx(\"p\",null,\"where \",mdx(\"inlineCode\",{parentName:\"p\"},\"utils\"),\" is bunch of helpers and contains following:\"),mdx(\"ol\",null,mdx(\"li\",{parentName:\"ol\"},mdx(\"inlineCode\",{parentName:\"li\"},\"mode\"),\" - a current theme mode \",mdx(\"inlineCode\",{parentName:\"li\"},\"light\"),\" / \",mdx(\"inlineCode\",{parentName:\"li\"},\"dark\"),\" (when \",mdx(\"inlineCode\",{parentName:\"li\"},\"Provider\"),`\nis not used, the default value is `,mdx(\"inlineCode\",{parentName:\"li\"},\"light\"),\")\"),mdx(\"li\",{parentName:\"ol\"},mdx(\"inlineCode\",{parentName:\"li\"},\"isDark\"),\" - if \",mdx(\"inlineCode\",{parentName:\"li\"},\"dark\"),\" mode is being used\"),mdx(\"li\",{parentName:\"ol\"},mdx(\"inlineCode\",{parentName:\"li\"},\"isLight\"),\" - if \",mdx(\"inlineCode\",{parentName:\"li\"},\"light\"),\" mode is being used\"),mdx(\"li\",{parentName:\"ol\"},mdx(\"inlineCode\",{parentName:\"li\"},\"renderContent\"),` - an utility function to render valid React components.\nThis function combines `,mdx(\"inlineCode\",{parentName:\"li\"},\"createElement\"),\" and \",mdx(\"inlineCode\",{parentName:\"li\"},\"cloneElement\"),` (and does an internal\ncheck which one should be used)`)),mdx(\"pre\",null,mdx(\"code\",t({parentName:\"pre\"},{className:\"language-tsx\",metastring:\"editor=false live=false\",editor:\"false\",live:\"false\"}),`const Component = RocketComponent.attrs(\n  (props, theme, { mode, isDark, isLight, renderContent }) => ({\n    propA: props.disabled ? 'Disabled' : 'Enabled',\n    propB: 'something else',\n    children: renderContent(someComponent, {\n      /* ... some props */\n    }),\n    // ...etc.\n  })\n)\n`)))}MDXContent.isMDXComponent=!0;\n","scope":{}}},"__N_SSG":true}