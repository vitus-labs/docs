{"pageProps":{"meta":{"title":"Text","slug":"text","description":""},"menu":[{"title":"Getting started","slug":"/docs/ui-system/elements/getting-started","submenu":[{"title":"Motivation","anchor":"/docs/ui-system/elements/getting-started#motivation"},{"title":"Installation","anchor":"/docs/ui-system/elements/getting-started#installation"},{"title":"Dependencies","anchor":"/docs/ui-system/elements/getting-started#dependencies"},{"title":"Available components","anchor":"/docs/ui-system/elements/getting-started#available-components"}]},{"title":"Element","slug":"/docs/ui-system/elements/element","submenu":[{"title":"Examples","anchor":"/docs/ui-system/elements/element#examples"},{"title":"Render children","anchor":"/docs/ui-system/elements/element#render-children"},{"title":"Before & After content","anchor":"/docs/ui-system/elements/element#before-&-after-content"},{"title":"Vertical & Horizontal alignment","anchor":"/docs/ui-system/elements/element#vertical-&-horizontal-alignment"},{"title":"Horizontal element","anchor":"/docs/ui-system/elements/element#horizontal-element"},{"title":"Vertical element","anchor":"/docs/ui-system/elements/element#vertical-element"},{"title":"Props","anchor":"/docs/ui-system/elements/element#props"}]},{"title":"List","slug":"/docs/ui-system/elements/list","submenu":[{"title":"Example","anchor":"/docs/ui-system/elements/list#example"},{"title":"Root element","anchor":"/docs/ui-system/elements/list#root-element"},{"title":"Render Items","anchor":"/docs/ui-system/elements/list#render-items"},{"title":"Data properties","anchor":"/docs/ui-system/elements/list#data-properties"},{"title":"Item key value","anchor":"/docs/ui-system/elements/list#item-key-value"},{"title":"Custom item component","anchor":"/docs/ui-system/elements/list#custom-item-component"},{"title":"Custom Item props","anchor":"/docs/ui-system/elements/list#custom-item-props"},{"title":"Wrapping items by another component","anchor":"/docs/ui-system/elements/list#wrapping-items-by-another-component"},{"title":"Extend Wrapper props","anchor":"/docs/ui-system/elements/list#extend-wrapper-props"},{"title":"List properties","anchor":"/docs/ui-system/elements/list#list-properties"}]},{"title":"Text","slug":"/docs/ui-system/elements/text","submenu":[{"title":"Examples","anchor":"/docs/ui-system/elements/text#examples"},{"title":"Using Text component","anchor":"/docs/ui-system/elements/text#using-text-component"},{"title":"Text types","anchor":"/docs/ui-system/elements/text#text-types"},{"title":"Paragraph","anchor":"/docs/ui-system/elements/text#paragraph"},{"title":"Props","anchor":"/docs/ui-system/elements/text#props"}]},{"title":"Overlay","slug":"/docs/ui-system/elements/overlay","submenu":[{"title":"Using Overlay","anchor":"/docs/ui-system/elements/overlay#using-overlay"},{"title":"Overlay Properties","anchor":"/docs/ui-system/elements/overlay#overlay-properties"}]},{"title":"Portal","slug":"/docs/ui-system/elements/portal","submenu":[{"title":"Examples","anchor":"/docs/ui-system/elements/portal#examples"},{"title":"Properties","anchor":"/docs/ui-system/elements/portal#properties"}]}],"content":{"compiledSource":"var m=Object.defineProperty,g=Object.defineProperties;var h=Object.getOwnPropertyDescriptors;var l=Object.getOwnPropertySymbols;var o=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable;var i=(t,a,n)=>a in t?m(t,a,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[a]=n,e=(t,a)=>{for(var n in a||(a={}))o.call(a,n)&&i(t,n,a[n]);if(l)for(var n of l(a))p.call(a,n)&&i(t,n,a[n]);return t},d=(t,a)=>g(t,h(a));var s=(t,a)=>{var n={};for(var r in t)o.call(t,r)&&a.indexOf(r)<0&&(n[r]=t[r]);if(t!=null&&l)for(var r of l(t))a.indexOf(r)<0&&p.call(t,r)&&(n[r]=t[r]);return n};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(n){var r=n,{components:t}=r,a=s(r,[\"components\"]);return mdx(MDXLayout,d(e(e({},layoutProps),a),{components:t,mdxType:\"MDXLayout\"}),mdx(\"h1\",null,\"Text\"),mdx(\"p\",null,`Text is a basic component to simply render text content. By default, it\nhas reseted some styling.`),mdx(\"h2\",null,\"Examples\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\"}),`// import { Text } from '@vitus-labs/elements'\n\n// \\u2193\\u2193\\u2193 Text \\u2193\\u2193\\u2193\nrender(\n  <>\n    <Text label=\"This is a label\" style={{ color: '#fff' }} />\n    <Text style={{ color: '#fff' }}>This is a children content</Text>\n  </>\n)\n`)),mdx(\"h2\",null,\"Using Text component\"),mdx(\"p\",null,`There are several ways of rendering text within Text component.\nLet's take a look at the examples below.`),mdx(\"h3\",null,\"Children property\"),mdx(\"p\",null,\"First of all, \",mdx(\"strong\",{parentName:\"p\"},\"Text\"),\" can be used and pass \",mdx(\"inlineCode\",{parentName:\"p\"},\"children\"),` prop\nto render content.`),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\"}),`// import { Text } from '@vitus-labs/elements'\n\n// \\u2193\\u2193\\u2193 Text \\u2193\\u2193\\u2193\nrender(<Text style={{ color: '#fff' }}>This is a children content</Text>)\n`)),mdx(\"h3\",null,\"Label property\"),mdx(\"p\",null,`For shorter texts, or inline texts sometimes it could me more convenient\nto use inline prop. For such a way, `,mdx(\"inlineCode\",{parentName:\"p\"},\"label\"),` prop could be used. In case\nof passing both `,mdx(\"inlineCode\",{parentName:\"p\"},\"children\"),\" and \",mdx(\"inlineCode\",{parentName:\"p\"},\"label\"),\", then \",mdx(\"strong\",{parentName:\"p\"},\"children\"),` will have\na priority and `,mdx(\"inlineCode\",{parentName:\"p\"},\"label\"),\" will be ignored.\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\"}),`// import { Text } from '@vitus-labs/elements'\n\n// \\u2193\\u2193\\u2193 Text \\u2193\\u2193\\u2193\nrender(<Text label=\"This is a label\" style={{ color: '#fff' }} />)\n`)),mdx(\"h2\",null,\"Text types\"),mdx(\"h2\",null,\"Paragraph\"),mdx(\"p\",null,\"By default it renders \",mdx(\"inlineCode\",{parentName:\"p\"},\"span\"),\" element as an \",mdx(\"strong\",{parentName:\"p\"},\"inline\"),` text element.\nIf you would like to render Text component as `,mdx(\"strong\",{parentName:\"p\"},\"block\"),` element (paragraph),\nyou can set prop `,mdx(\"inlineCode\",{parentName:\"p\"},\"paragraph\"),\" to \",mdx(\"strong\",{parentName:\"p\"},\"true\"),\", or alternatively set property \",mdx(\"inlineCode\",{parentName:\"p\"},\"tag\"),\".\"),mdx(\"p\",null,\"In case of using \",mdx(\"inlineCode\",{parentName:\"p\"},\"paragraph\"),\" and \",mdx(\"inlineCode\",{parentName:\"p\"},\"tag\"),\", \",mdx(\"strong\",{parentName:\"p\"},\"tag\"),` will have a priority over\nparagraph prop.`),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-tsx\"}),`// import { Text } from '@vitus-labs/elements'\n\n// \\u2193\\u2193\\u2193 Text \\u2193\\u2193\\u2193\nrender(\n  <Text paragraph style={{ color: '#fff' }}>\n    This is a block text which can have as children another\n    <Text tag=\"strong\">text component</Text>.\n  </Text>\n)\n`)),mdx(\"h2\",null,\"Props\"),mdx(\"p\",null,\"These are props to which can be passed to \",mdx(\"strong\",{parentName:\"p\"},\"Text\")),mdx(\"table\",null,mdx(\"thead\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"thead\"},mdx(\"th\",e({parentName:\"tr\"},{align:null}),\"Name\"),mdx(\"th\",e({parentName:\"tr\"},{align:null}),\"Type\"),mdx(\"th\",e({parentName:\"tr\"},{align:\"center\"}),\"Default value\"),mdx(\"th\",e({parentName:\"tr\"},{align:\"left\"}),\"Description\"))),mdx(\"tbody\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"children\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"ReactNode\")),mdx(\"td\",e({parentName:\"tr\"},{align:\"center\"})),mdx(\"td\",e({parentName:\"tr\"},{align:\"left\"}),\"Children to be rendered within \",mdx(\"strong\",{parentName:\"td\"},\"Text\"),\" component.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"label\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"ReactNode\")),mdx(\"td\",e({parentName:\"tr\"},{align:\"center\"})),mdx(\"td\",e({parentName:\"tr\"},{align:\"left\"}),\"Label can be used instead of children for inline syntax. But \",mdx(\"strong\",{parentName:\"td\"},\"children\"),\" prop takes a precedence\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"paragraph\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"boolean\")),mdx(\"td\",e({parentName:\"tr\"},{align:\"center\"})),mdx(\"td\",e({parentName:\"tr\"},{align:\"left\"}),\"Defines whether should behave as a block text element. Automatically adds \",mdx(\"strong\",{parentName:\"td\"},\"p\"),\" HTML tag\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"tag\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"HTML valid tag\")),mdx(\"td\",e({parentName:\"tr\"},{align:\"center\"})),mdx(\"td\",e({parentName:\"tr\"},{align:\"left\"}),\"Defines what kind of HTML tag should be rendered\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"css\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},\"ExtendCss\")),mdx(\"td\",e({parentName:\"tr\"},{align:\"center\"})),mdx(\"td\",e({parentName:\"tr\"},{align:\"left\"}),\"Defines what kind of HTML tag should be rendered\")))))}MDXContent.isMDXComponent=!0;\n","scope":{}}},"__N_SSG":true}